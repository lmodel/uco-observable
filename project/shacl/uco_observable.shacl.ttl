@prefix observable: <https://w3id.org/lmodel/uco-observable/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<action:ActionArgumentFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An action argument facet is a grouping of characteristics unique to a single parameter of an action.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The identifying label of an argument.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 0 ;
            sh:path <action:argumentName> ],
        [ sh:description "\"The value of an action parameter.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 1 ;
            sh:path <core:value> ] ;
    sh:targetClass <action:ActionArgumentFacet> .

<action:ActionEstimationFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An action estimation facet is a grouping of characteristics unique to decision-focused approximation aspects for an action that may potentially be performed.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"An estimation of the cost if the action is performed.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <action:estimatedCost> ],
        [ sh:description "\"The intended purpose for performing the action.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <action:objective> ],
        [ sh:description "\"An estimation of the effectiveness of the action at achieving its objective if the action is performed.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <action:estimatedEfficacy> ],
        [ sh:description "\"An estimation of the impact if the action is performed.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <action:estimatedImpact> ] ;
    sh:targetClass <action:ActionEstimationFacet> .

<action:ActionFrequencyFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An action frequency facet is a grouping of characteristics unique to the frequency of occurrence for an action.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The time scale utilized for the frequency rate count for the occurence of an action.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 1 ;
            sh:path <action:scale> ],
        [ sh:description "\"The units of measure utilized for the frequency rate count for the occurence of an action.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 2 ;
            sh:path <action:units> ],
        [ sh:description "\"A characterization of the frequency trend for the occurence of an action.\"" ;
            sh:in ( "Decreasing" "Increasing" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 3 ;
            sh:path <action:trend> ],
        [ sh:description "\"The frequency rate for the occurence of an action.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 0 ;
            sh:path <action:rate> ] ;
    sh:targetClass <action:ActionFrequencyFacet> .

<action:ActionLifecycle> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An action lifecycle is an action pattern consisting of an ordered set of multiple actions or subordinate action lifecycles.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 16 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things resulting from performing an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 11 ;
            sh:path <action:result> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The primary performer of an action.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <action:performer> ],
        [ sh:class <action:Action> ;
            sh:description "\"References to other actions that make up part of a larger more complex action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path <action:subaction> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"A characterization of the differences between the expected and the actual performance of the action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <action:error> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 17 ;
            sh:path <core:hasFacet> ],
        [ sh:description "\"The current state of the action.\"" ;
            sh:in ( "Complete/Finish" "Error" "Fail" "Ongoing" "Pending" "Success" "Unknown" ) ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path <action:actionStatus> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 21 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 15 ;
            sh:path <dcterms:description> ],
        [ sh:description "\"The time at which performance of the action ended.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:endTime> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things that the action is performed on/against.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:object> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The supporting (non-primary) performers of an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 10 ;
            sh:path <action:participant> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things used to perform an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path <action:instrument> ],
        [ sh:class <location:Location> ;
            sh:description "\"The locations where an action occurs.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 12 ;
            sh:path <action:location> ],
        [ sh:class <action:ArrayOfAction> ;
            sh:description "\"The ordered set of actions or sub action-lifecycles that represent the action lifecycle.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <action:phase> ],
        [ sh:description "A generic tag/label." ;
            sh:order 23 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 19 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The environment wherein an action occurs.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <action:environment> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 20 ;
            sh:path <core:objectMarking> ],
        [ sh:description "\"The time at which performance of the action began.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:startTime> ],
        [ sh:description "\"The number of times that the action was performed.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path <action:actionCount> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 22 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 18 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass <action:ActionLifecycle> .

<action:ActionPattern> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An action pattern is a grouping of characteristics unique to a combination of actions forming a consistent or characteristic arrangement.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 15 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things used to perform an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path <action:instrument> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 18 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 20 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 14 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The supporting (non-primary) performers of an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <action:participant> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 19 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path <core:createdBy> ],
        [ sh:class <action:Action> ;
            sh:description "\"References to other actions that make up part of a larger more complex action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <action:subaction> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things that the action is performed on/against.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path <core:object> ],
        [ sh:description "\"The time at which performance of the action began.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:startTime> ],
        [ sh:class <location:Location> ;
            sh:description "\"The locations where an action occurs.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path <action:location> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"A characterization of the differences between the expected and the actual performance of the action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path <action:error> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 16 ;
            sh:path <core:hasFacet> ],
        [ sh:description "\"The current state of the action.\"" ;
            sh:in ( "Complete/Finish" "Error" "Fail" "Ongoing" "Pending" "Success" "Unknown" ) ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path <action:actionStatus> ],
        [ sh:description "A generic tag/label." ;
            sh:order 22 ;
            sh:path <core:tag> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The primary performer of an action.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <action:performer> ],
        [ sh:description "\"The time at which performance of the action ended.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:endTime> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things resulting from performing an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <action:result> ],
        [ sh:description "\"The number of times that the action was performed.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <action:actionCount> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The environment wherein an action occurs.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <action:environment> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 17 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 21 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass <action:ActionPattern> .

<collections:Collection> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A group of objects that can be considered as a whole." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Thing> ;
            sh:description "The link to the members of a collection" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <collections:element> ],
        [ sh:description "The number of item belonging to a collection." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <collections:size> ] ;
    sh:targetClass <collections:Collection> .

<collections:List> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An ordered array of items, that can be present in multiple copies" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:ListItem> ;
            sh:description "The link to every item of the bag" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <collections:item> ],
        [ sh:class <collections:ListItem> ;
            sh:description "The link to the last item of the list." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <collections:lastItem> ],
        [ sh:class <collections:Thing> ;
            sh:description "The link to the members of a collection" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path <collections:element> ],
        [ sh:class <collections:ListItem> ;
            sh:description "The link to the first item of the list." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:firstItem> ],
        [ sh:description "The number of item belonging to a collection." ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path <collections:size> ] ;
    sh:targetClass <collections:List> .

<collections:Set> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A collection that cannot contain duplicate elements." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Thing> ;
            sh:description "The link to the members of a collection" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <collections:element> ],
        [ sh:description "The number of item belonging to a collection." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <collections:size> ] ;
    sh:targetClass <collections:Set> .

<core:Annotation> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An annotation is an assertion made in relation to one or more objects." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 11 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 3 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:UcoObject> ;
            sh:description "Specifies one or more UcoObjects." ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <core:object> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 6 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 5 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 4 ;
            sh:path <core:externalReference> ],
        [ sh:description "A textual statement of an assertion." ;
            sh:order 1 ;
            sh:path <core:statement> ] ;
    sh:targetClass <core:Annotation> .

<core:Assertion> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An assertion is a statement declared to be true." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 3 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:specVersion> ],
        [ sh:description "A textual statement of an assertion." ;
            sh:order 0 ;
            sh:path <core:statement> ],
        [ sh:description "A generic tag/label." ;
            sh:order 10 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 4 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 5 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 2 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass <core:Assertion> .

<core:AttributedName> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An attributed name is a name of an entity issued by some attributed naming authority." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 5 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 4 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 2 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the naming authority that issued the name of the entity." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:namingAuthority> ],
        [ sh:description "A generic tag/label." ;
            sh:order 10 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 3 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass <core:AttributedName> .

<core:Bundle> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A bundle is a container for a grouping of UCO content with no presumption of shared context." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 2 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 4 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 3 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:UcoObject> ;
            sh:description "Specifies one or more UcoObjects." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <core:object> ],
        [ sh:description "A generic tag/label." ;
            sh:order 10 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 5 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass <core:Bundle> .

<core:Compilation> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A compilation is a grouping of things." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass <core:Compilation> .

<core:ConfidenceFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A confidence is a grouping of characteristics unique to an asserted level of certainty in the accuracy of some information." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "An asserted level of certainty in the accuracy of some information." ;
            sh:maxCount 1 ;
            sh:maxInclusive 100 ;
            sh:minCount 1 ;
            sh:minInclusive 0 ;
            sh:order 0 ;
            sh:path <core:confidence> ] ;
    sh:targetClass <core:ConfidenceFacet> .

<core:ContextualCompilation> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A contextual compilation is a grouping of things sharing some context (e.g., a set of network connections observed on a given day, all accounts associated with a given person)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 5 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 3 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <core:objectMarking> ],
        [ sh:class <core:UcoObject> ;
            sh:description "Specifies one or more UcoObjects." ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <core:object> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 10 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 4 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 2 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass <core:ContextualCompilation> .

<core:ControlledVocabulary> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A controlled vocabulary is an explicitly constrained set of string values." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A reference to a specification for an explicitly constrained set of string values. The specification may be unstructured (e.g., web page listing string values) or structured (e.g. RDF/OWL enumeration)." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:constrainingVocabularyReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A string value." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 2 ;
            sh:path <core:value> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of an explicitly constrained set of string values." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:constrainingVocabularyName> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass <core:ControlledVocabulary> .

<core:EnclosingCompilation> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An enclosing compilation is a container for a grouping of things." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 2 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 3 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 10 ;
            sh:path <core:tag> ],
        [ sh:class <core:UcoObject> ;
            sh:description "Specifies one or more UcoObjects." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <core:object> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 4 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 5 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass <core:EnclosingCompilation> .

<core:ExternalReference> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Characteristics of a reference to a resource outside of the UCO." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A URL for some information defined external to the UCO context." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:referenceURL> ],
        [ sh:description "A description of the context relevant to the definition of a particular external reference identifier." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:definingContext> ],
        [ sh:description "An identifier for some information defined external to the UCO context." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:externalIdentifier> ] ;
    sh:targetClass <core:ExternalReference> .

<core:Facet> a sh:NodeShape ;
    sh:closed false ;
    sh:description "A facet is a grouping of characteristics singularly unique to a particular inherent aspect of a UCO domain object." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <core:Facet> .

<core:Grouping> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A grouping is a compilation of referenced UCO content with a shared context." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 5 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 6 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 3 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:UcoObject> ;
            sh:description "Specifies one or more UcoObjects." ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <core:object> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A description of particular contextual affinity." ;
            sh:order 0 ;
            sh:path <core:context> ],
        [ sh:description "A generic tag/label." ;
            sh:order 11 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 4 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass <core:Grouping> .

<core:IdentityAbstraction> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An identity abstraction is a grouping of identifying characteristics unique to an individual or organization. This class is an ontological structural abstraction for this concept. Implementations of this concept should utilize the identity:Identity class." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass <core:IdentityAbstraction> .

<core:Item> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An item is a distinct article or unit." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ] ;
    sh:targetClass <core:Item> .

<core:ModusOperandi> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A modus operandi is a particular method of operation (how a particular entity behaves or the resources they use)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass <core:ModusOperandi> .

<core:Relationship> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A relationship is a grouping of characteristics unique to an assertion that one or more objects are related to another object in some way." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 8 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 12 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 15 ;
            sh:path <core:tag> ],
        [ sh:description "The ending time of a time range." ;
            sh:order 0 ;
            sh:path <core:endTime> ],
        [ sh:class <core:UcoObject> ;
            sh:description "The originating node of a specified relationship." ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path <core:source> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 10 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A specification whether or not a relationship assertion is limited to the context FROM a source object(s) TO a target object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 1 ;
            sh:path <core:isDirectional> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 7 ;
            sh:path <dcterms:description> ],
        [ sh:description "The initial time of a time range." ;
            sh:order 4 ;
            sh:path <core:startTime> ],
        [ sh:class <core:UcoObject> ;
            sh:description "The terminating node of a specified relationship." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path <core:target> ],
        [ sh:description "A characterization of the nature of a relationship between objects." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:kindOfRelationship> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 9 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass <core:Relationship> .

<core:UcoInherentCharacterizationThing> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A UCO inherent characterization thing is a grouping of characteristics unique to a particular inherent aspect of a UCO domain object." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <core:UcoInherentCharacterizationThing> .

<core:UcoThing> a sh:NodeShape ;
    sh:closed false ;
    sh:description "UcoThing is the top-level class within UCO." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <core:UcoThing> .

observable:API a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An API (application programming interface) is a computing interface that defines interactions between multiple software or mixed hardware-software intermediaries. It defines the kinds of calls or requests that can be made, how to make them, the data formats that should be used, the conventions to follow, etc. [based on https://en.wikipedia.org/wiki/API]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:API .

observable:ARPCache a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An ARP cache is a collection of Address Resolution Protocol (ARP) entries (mostly dynamic) that are created when an IP address is resolved to a MAC address (so the computer can effectively communicate with the IP address). [based on https://en.wikipedia.org/wiki/ARP_cache]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:ARPCache .

observable:ARPCacheEntry a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An ARP cache entry is a single Address Resolution Protocol (ARP) response record that is created when an IP address is resolved to a MAC address (so the computer can effectively communicate with the IP address). [based on https://en.wikipedia.org/wiki/ARP_cache]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:ARPCacheEntry .

observable:Account a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An account is an arrangement with an entity to enable and control the provision of some capability or service.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass observable:Account .

observable:AccountAuthenticationFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An account authentication facet is a grouping of characteristics unique to the mechanism of accessing an account.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The type of password, for instance plain-text or encrypted.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:passwordType ],
        [ sh:description "\"Specifies an authentication password.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:password ],
        [ sh:description "\"The date and time that the password was last changed.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:passwordLastChanged ] ;
    sh:targetClass observable:AccountAuthenticationFacet .

observable:AccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An account facet is a grouping of characteristics unique to an arrangement with an entity to enable and control the provision of some capability or service.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The type of account, for instance bank, phone, application, service, etc.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:accountType ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"Specifies the owner of an observable Object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:owner ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The issuer of this account.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:accountIssuer ],
        [ sh:description "\"Specifies the date in which the registered domain will expire.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:expirationDate ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:observableCreatedTime ],
        [ sh:description "\"The unique identifier for the account.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:accountIdentifier ],
        [ sh:description "\"Indicates whether the network connection is still active.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:isActive ] ;
    sh:targetClass observable:AccountFacet .

observable:Adaptor a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An adaptor is a device that physically converts the pin outputs but does not alter the underlying protocol (e.g. uSD to SD, CF to ATA, etc.)\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ] ;
    sh:targetClass observable:Adaptor .

observable:Address a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An address is an identifier assigned to enable routing and management of information.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:Address .

observable:AlternateDataStreamFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An alternate data stream facet is a grouping of characteristics unique to data content stored within an NTFS file that is independent of the standard content stream of the file and isHidden from access by default NTFS file viewing mechanisms.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <rdfs:label> ],
        [ sh:class <types:Hash> ;
            sh:description "\"Specifies any hashes computed over the section.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:hashes ],
        [ sh:description "The number of item belonging to a collection." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <collections:size> ] ;
    sh:targetClass observable:AlternateDataStreamFacet .

observable:AndroidDevice a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An Android device is a device running the Android operating system. [based on https://en.wikipedia.org/wiki/Android_(operating_system)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:AndroidDevice .

observable:AndroidDeviceFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An Android device facet is a grouping of characteristics unique to an Android device. [based on https://en.wikipedia.org/wiki/Android_(operating_system)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The user-visible version string. E.g., '1.0' or '3.4b5' or 'bananas'. This field is an opaque string. Do not assume that its value has any particular structure or that values of RELEASE from different releases can be somehow ordered. [based on https://developer.android.com/reference/android/os/Build.VERSION#RELEASE]\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:androidVersion ],
        [ sh:description "\"Root access through Linux SU binary observed to be enabled. [based on https://en.wikipedia.org/wiki/Rooting_(Android)]\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:isSURootEnabled ],
        [ sh:description "\"A string that uniquely identifies a build of the Android operating system. [based on https://developer.android.com/reference/android/os/Build#FINGERPRINT]\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:androidFingerprint ],
        [ sh:description "\"Root access through the Android Debug Bridge (ADB) daemon observed to be enabled. [based on https://developer.android.com/studio/command-line/adb]\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:isADBRootEnabled ],
        [ sh:description "\"A 64-bit number (expressed as a hexadecimal string), unique to each combination of app-signing key, user, and device. [based on https://developer.android.com/reference/android/provider/Settings.Secure#ANDROID_ID\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:androidID ] ;
    sh:targetClass observable:AndroidDeviceFacet .

observable:AndroidPhone a sh:NodeShape ;
    sh:closed true ;
    sh:description "An android phone is a smart phone that applies the Android mobile operating system." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:AndroidPhone .

observable:AntennaFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An antenna alignment facet contains the metadata surrounding the cell tower's antenna position.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The angle in degrees of the radial rotation around its main beam direction.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:skew ],
        [ sh:description "\"The strength of the antenna signal.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:signalStrength ],
        [ sh:description "\"The height (in meters) of the antenna from the ground.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:antennaHeight ],
        [ sh:description "\"The width of the antenna beam in degrees.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:horizontalBeamWidth ],
        [ sh:description "\"The median rotation in degrees around a vertical axis of the cell antenna sector accessed.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:azimuth ],
        [ sh:description "\"The angle in degrees of the antenna from the local horizontal plane.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:elevation ] ;
    sh:targetClass observable:AntennaFacet .

observable:AppleDevice a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An apple device is a smart device that applies either the MacOS or iOS operating system\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:AppleDevice .

observable:Appliance a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An appliance is a purpose-built computer with software or firmware that is designed to provide a specific computing capability or resource. [based on https://en.wikipedia.org/wiki/computer_appliance]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:Appliance .

observable:Application a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An application is a particular software program designed for end users.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:Application .

observable:ApplicationAccount a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An application account is an account within a particular software program designed for end users.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:ApplicationAccount .

observable:ApplicationAccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An application account facet is a grouping of characteristics unique to an account within a particular software program designed for end users.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:application ] ;
    sh:targetClass observable:ApplicationAccountFacet .

observable:ApplicationFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An application facet is a grouping of characteristics unique to a particular software program designed for end users.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:operatingSystem ],
        [ sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:version ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:numberOfLaunches ],
        [ sh:class observable:ApplicationVersion ;
            sh:description "\"Specifies the history of installed application version(s).\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:installedVersionHistory ],
        [ sh:description "" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:applicationIdentifier ] ;
    sh:targetClass observable:ApplicationFacet .

observable:ArchiveFile a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An archive file is a file that is composed of one or more computer files along with metadata.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:ArchiveFile .

observable:ArchiveFileFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An archive file facet is a grouping of characteristics unique to a file that is composed of one or more computer files along with metadata.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The type of a file archive, e.g. ZIP, GZIP or RAR.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:archiveType ],
        [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:comment ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:version ] ;
    sh:targetClass observable:ArchiveFileFacet .

observable:Audio a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"audio is a digital representation of sound.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:Audio .

observable:AudioFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An audio facet is a grouping of characteristics unique to a digital representation of sound.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The duration of the phone call in seconds.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:duration ],
        [ sh:description "\"The format of the audio. For example: mp3 or flac.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:format ],
        [ sh:description "\"The bitrate of the audio in bits per second.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:bitRate ],
        [ sh:description "\"The type of a audio. For example: music or speech.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:audioType ] ;
    sh:targetClass observable:AudioFacet .

observable:AutonomousSystem a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An autonomous system is a collection of connected Internet Protocol (IP) routing prefixes under the control of one or more network operators on behalf of a single administrative entity or domain that presents a common, clearly defined routing policy to the Internet. [based on https://en.wikipedia.org/wiki/Autonomous_system_(Internet)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:AutonomousSystem .

observable:AutonomousSystemFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An autonomous system facet is a grouping of characteristics unique to a collection of connected Internet Protocol (IP) routing prefixes under the control of one or more network operators on behalf of a single administrative entity or domain that presents a common, clearly defined routing policy to the Internet. [based on https://en.wikipedia.org/wiki/Autonomous_system_(Internet)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"specifies the name of the Regional Internet Registry (RIR) which allocated the IP address contained in a WHOIS entry.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:regionalInternetRegistry ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:number ],
        [ sh:description "" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:asHandle ] ;
    sh:targetClass observable:AutonomousSystemFacet .

observable:BlackBerryPhone a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A blackberry phone is a smart phone that applies the Blackberry OS mobile operating system. (Blackberry 10 re-introduces Blackberry OS, prior to that the OS was Android.)\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:BlackBerryPhone .

observable:BlockDeviceNode a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A block device node is a UNIX filesystem special file that serves as a conduit to communicate with devices, providing buffered randomly accesible input and output. Block device nodes are used to apply access rights to the devices and to direct operations on the files to the appropriate device drivers. [based on https://en.wikipedia.org/wiki/Unix_file_types]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass observable:BlockDeviceNode .

observable:BluetoothAddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Bluetooth address is a Bluetooth standard conformant identifier assigned to a Bluetooth device to enable routing and management of Bluetooth standards conformant communication to or from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:BluetoothAddress .

observable:BluetoothAddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Bluetooth address facet is a grouping of characteristics unique to a Bluetooth standard conformant identifier assigned to a Bluetooth device to enable routing and management of Bluetooth standards conformant communication to or from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ] ;
    sh:targetClass observable:BluetoothAddressFacet .

observable:BotConfiguration a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A bot configuration is a set of contextual settings for a software application that runs automated tasks (scripts) over the Internet at a much higher rate than would be possible for a human alone.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:BotConfiguration .

observable:BrowserBookmark a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A browser bookmark is a saved shortcut that directs a WWW (World Wide Web) browser software program to a particular WWW accessible resource. [based on https://techterms.com/definition/bookmark]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:BrowserBookmark .

observable:BrowserBookmarkFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A browser bookmark facet is a grouping of characteristics unique to a saved shortcut that directs a WWW (World Wide Web) browser software program to a particular WWW accessible resource. [based on https://techterms.com/definition/bookmark]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "\"The target of the bookmark.\"" ;
            sh:order 4 ;
            sh:path observable:urlTargeted ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:observableCreatedTime ],
        [ sh:description "\"Specifies the number of times a URL has been visited by a particular web browser.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:visitCount ],
        [ sh:description "\"The date and time at which the Object was accessed.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:accessedTime ],
        [ sh:description "\"The folder containing the bookmark.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:bookmarkPath ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:application ] ;
    sh:targetClass observable:BrowserBookmarkFacet .

observable:BrowserCookie a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A browser cookie is a piece of of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing. [based on https://en.wikipedia.org/wiki/HTTP_cookie]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ] ;
    sh:targetClass observable:BrowserCookie .

observable:BrowserCookieFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A browser cookie facet is a grouping of characteristics unique to a piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing. [based on https://en.wikipedia.org/wiki/HTTP_cookie]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Is the cookie secure? If the cookie isSecure it cannot be delivered over an unencrypted session such as http.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:isSecure ],
        [ sh:description "\"The date and time at which the validity of the object expires.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:expirationTime ],
        [ sh:description "\"String representation of the path of the cookie.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:cookiePath ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:application ],
        [ sh:description "\"The name of the cookie.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:cookieName ],
        [ sh:description "\"The date and time at which the Object was accessed.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:accessedTime ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The domain for which the cookie is stored, for example nfi.minjus.nl.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:cookieDomain ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:observableCreatedTime ] ;
    sh:targetClass observable:BrowserCookieFacet .

observable:Calendar a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A calendar is a collection of appointments, meetings, and events.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:Calendar .

observable:CalendarEntry a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A calendar entry is an appointment, meeting or event within a collection of appointments, meetings and events.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:CalendarEntry .

observable:CalendarEntryFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A calendar entry facet is a grouping of characteristics unique to an appointment, meeting, or event within a collection of appointments, meetings, and events.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:UcoObject> ;
            sh:description "\"Specifies the owner of an observable Object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path observable:owner ],
        [ sh:class <identity:Identity> ;
            sh:description "\"The attendants of the event.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:attendant ],
        [ sh:description "\"The status of the event, for instance accepted, pending or cancelled.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:eventStatus ],
        [ sh:class <location:Location> ;
            sh:description "\"An associated location.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path <action:location> ],
        [ sh:description "\"The subject of the email.\"" ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:subject ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:observableCreatedTime ],
        [ sh:description "\"The duration of the phone call in seconds.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:duration ],
        [ sh:description "\"The type of the event, for example 'information', 'warning' or 'error'.\"" ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:eventType ],
        [ sh:description "The ending time of a time range." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:endTime> ],
        [ sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:remindTime ],
        [ sh:description "\"Is the event marked as private?\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:isPrivate ],
        [ sh:description "The initial time of a time range." ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:startTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <core:modifiedTime> ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:application ],
        [ sh:description "\"Recurrence of the event.\"" ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path observable:recurrence ] ;
    sh:targetClass observable:CalendarEntryFacet .

observable:CalendarFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A calendar facet is a grouping of characteristics unique to a collection of appointments, meetings, and events.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:UcoObject> ;
            sh:description "\"Specifies the owner of an observable Object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:owner ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:application ] ;
    sh:targetClass observable:CalendarFacet .

observable:Call a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A call is a connection as part of a realtime cyber communication between one or more parties.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:Call .

observable:CallFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A call facet is a grouping of characteristics unique to a connection as part of a realtime cyber communication between one or more parties.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The initial time of a time range." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:startTime> ],
        [ sh:description "\"The type of a phone call,for example incoming, outgoing, missed.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:callType ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The supporting (non-primary) performers of an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path <action:participant> ],
        [ sh:description "\"The duration of the phone call in seconds.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:duration ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:application ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The phone number of the initiating party.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path observable:from ],
        [ sh:description "The ending time of a time range." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:endTime> ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The receiver's phone number.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path observable:to ] ;
    sh:targetClass observable:CallFacet .

observable:CapturedTelecommunicationsInformation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:CapturedTelecommunicationsInformation .

observable:CapturedTelecommunicationsInformationFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A captured telecommunications information facet represents certain information within captured or intercepted telecommunications data.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The ending time of a time range." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:endTime> ],
        [ sh:description "The initial time of a time range." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:startTime> ],
        [ sh:class observable:CellSite ;
            sh:description "\"Specifies the cell site accessed.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:captureCellSite ],
        [ sh:description "\"State of the call in a call Detail Record (e.g. idle).\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:interceptedCallState ] ;
    sh:targetClass observable:CapturedTelecommunicationsInformationFacet .

observable:CellSiteFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A cell site facet contains the metadata surrounding the cell site.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the unique number used to identify each Cell Site within a location area code.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:cellSiteIdentifier ],
        [ sh:description "\"This code identifies the mobile operator of the cell site. For GSM, this is the Mobile network  Code (MNC) and for CMDA this is the network identifier (NID).\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:cellSiteNetworkCode ],
        [ sh:description "\"The location area code is a unique number of current location area of the cell site. A location area is a set of cell site that are grouped together to optimize signalling. For GSM, this is the LAC.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:cellSiteLocationAreaCode ],
        [ sh:description "\"Specifies the technology used by the Cell Site (e.g., GSM, CDMA, or LTE).\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:cellSiteType ],
        [ sh:description "\"The country code represents the country of the cell site. For GSM, this is the Mobile Country Code (MCC).\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:cellSiteCountryCode ] ;
    sh:targetClass observable:CellSiteFacet .

observable:CharacterDeviceNode a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A character device node is a UNIX filesystem special file that serves as a conduit to communicate with devices, providing only a serial stream of input or accepting a serial stream of output. Character device nodes are used to apply access rights to the devices and to direct operations on the files to the appropriate device drivers. [based on https://en.wikipedia.org/wiki/Unix_file_types]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:CharacterDeviceNode .

observable:Code a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"Code is a direct representation (source, byte or binary) of a collection of computer instructions that form software which tell a computer how to work. [based on https://en.wikipedia.org/wiki/Software]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:Code .

observable:CompressedStreamFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A compressed stream facet is a grouping of characteristics unique to the application of a size-reduction process to a body of data content.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The compressionRatio of the compressed data.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:compressionRatio ],
        [ sh:description "\"The algorithm used to compress the data.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:compressionMethod ] ;
    sh:targetClass observable:CompressedStreamFacet .

observable:Computer a sh:NodeShape ;
    sh:closed false ;
    sh:description "\"A computer is an electronic device for storing and processing data, typically in binary, according to instructions given to it in a variable program. [based on 'computer.' Oxford English Dictionary, Oxford University Press, 2022.]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:Computer .

observable:ComputerSpecification a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A computer specification is the hardware and software of a programmable electronic device that can store, retrieve, and process data. {based on merriam-webster.com/dictionary/computer]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:ComputerSpecification .

observable:ComputerSpecificationFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A computer specificaiton facet is a grouping of characteristics unique to the hardware and software of a programmable electronic device that can store, retrieve, and process data. [based on merriam-webster.com/dictionary/computer]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the amount of physical memory available on the system, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:availableRam ],
        [ sh:description "\"Specifies the date of the BIOS (e.g. the datestamp of the BIOS revision).\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:biosDate ],
        [ sh:description "\"Specifies the serialNumber of the BIOS.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:biosSerialNumber ],
        [ sh:description "\"Specifies the date the BIOS was released.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:biosReleaseDate ],
        [ sh:description "\"Specifies the time zone used by the system, without taking daylight savings time (DST) into account.\"" ;
            sh:maxCount 1 ;
            sh:order 18 ;
            sh:path observable:timezoneStandard ],
        [ sh:description "\"Specifies the time zone used by the system, taking daylight savings time (DST) into account.\"" ;
            sh:maxCount 1 ;
            sh:order 17 ;
            sh:path observable:timezoneDST ],
        [ sh:description "\"Specifies the localTime on the system.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:localTime ],
        [ sh:description "\"Specifies the manufacturer of the BIOS.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:biosManufacturer ],
        [ sh:description "\"Specifies the name of the GPU used by the system.\"" ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:gpu ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the list of networkInterfaces present on the system.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 15 ;
            sh:path observable:networkInterface ],
        [ sh:description "\"Specifies the current date on the system.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:currentSystemDate ],
        [ sh:description "\"Specifies the hostname of the system.\"" ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:hostname ],
        [ sh:description "\"Specifies the name of the GPU family used by the system.\"" ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path observable:gpuFamily ],
        [ sh:description "\"Specifies the version of the BIOS.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:biosVersion ],
        [ sh:description "\"Specifies the name of the CPU family used by the system.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:cpuFamily ],
        [ sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:systemTime ],
        [ sh:description "\"Specifies the name of the CPU used by the system.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:cpu ],
        [ sh:description "\"Specifies the specific architecture (e.g. x86) used by the CPU of the system.\"" ;
            sh:maxCount 1 ;
            sh:order 16 ;
            sh:path observable:processorArchitecture ],
        [ sh:description "\"Specifies the duration that represents the current amount of time that the system has been up.\"" ;
            sh:maxCount 1 ;
            sh:order 19 ;
            sh:path observable:uptime ],
        [ sh:description "\"Specifies the total amount of physical memory present on the system, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:totalRam ] ;
    sh:targetClass observable:ComputerSpecificationFacet .

observable:ConfiguredSoftware a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A configured software is a Software that is known to be configured to run in a more specified manner than some unconfigured or less-configured Software.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 14 ;
            sh:path <core:tag> ],
        [ sh:class <configuration:Configuration> ;
            sh:description "A configuration used by an object." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <configuration:usesConfiguration> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:UcoObject> ;
            sh:description "The object which has been configured to run in a more specified manner than another object.  This property is expected to have a more specific range when associated with a class, such as a configured Tool having this property have a range of a Tool." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <configuration:isConfigurationOf> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 6 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 11 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 7 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 9 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 8 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:ConfiguredSoftware .

observable:Contact a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contact is a set of identification and communication related details for a single entity.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass observable:Contact .

observable:ContactFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contact facet is a grouping of characteristics unique to a set of identification and communication related details for a single entity.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Last time contacted specifies the date and time that a particular contact was last contacted.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:lastTimeContacted ],
        [ sh:description "" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <identity:birthdate> ],
        [ sh:description "\"Name phonetic specifies the phonetic pronunciation of the name of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 17 ;
            sh:path observable:namePhonetic ],
        [ sh:description "\"contactNote specifies a comment/note associated with a given contact.\"" ;
            sh:maxCount 1 ;
            sh:order 21 ;
            sh:path observable:contactNote ],
        [ sh:description "\"contactGroup specifies the name/tag of a particular named/tagged grouping of contacts.\"" ;
            sh:maxCount 1 ;
            sh:order 20 ;
            sh:path observable:contactGroup ],
        [ sh:class observable:ContactSIP ;
            sh:description "\"contactSIP specifies information characterizing details for contacting a contact entity by Session Initiation Protocol (SIP).\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path observable:contactSIP ],
        [ sh:class observable:ContactEmail ;
            sh:description "\"contactEmail specifies information characterizing details for contacting a contact entity by email.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:contactEmail ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Source application specifies the software application that a particular contact or contact list is associated with.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path observable:sourceApplication ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path observable:displayName ],
        [ sh:description "\"Name suffix specifies an suffix (coming ordinally after last/family name) for the name of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 19 ;
            sh:path observable:nameSuffix ],
        [ sh:description "\"The firstName of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:firstName ],
        [ sh:class observable:ContactMessaging ;
            sh:description "\"contactMessaging specifies information characterizing details for contacting a contact entity by digital messaging.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:contactMessaging ],
        [ sh:description "\"The middleName of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 16 ;
            sh:path observable:middleName ],
        [ sh:description "\"Specifies an ID for the contact.\"" ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:contactID ],
        [ sh:description "\"The lastName of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 15 ;
            sh:path observable:lastName ],
        [ sh:class observable:ContactPhone ;
            sh:description "\"contactPhone specifies information characterizing details for contacting a contact entity by telephone.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:contactPhone ],
        [ sh:description "\"Number times contacted specifies the number of times a particular contact has been contacted.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:numberTimesContacted ],
        [ sh:class observable:ContactProfile ;
            sh:description "\"contactProfile specifies information characterizing details for contacting a contact entity by online service.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path observable:contactProfile ],
        [ sh:class observable:ContactURL ;
            sh:description "\"contactURL specifies information characterizing details for contacting a contact entity by Uniform Resource Locator (URL).\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path observable:contactURL ],
        [ sh:description "\"Nickname specifies an alternate, unofficial and typically informal name for a person independent of their official name.\"" ;
            sh:maxCount 1 ;
            sh:order 22 ;
            sh:path observable:nickname ],
        [ sh:description "\"Name prefix specifies an honorific prefix (coming ordinally before first/given name) for the name of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 18 ;
            sh:path observable:namePrefix ],
        [ sh:class observable:ContactAddress ;
            sh:description "\"contactAddress specifies information characterizing a geolocation address of a contact entity.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:contactAddress ],
        [ sh:class observable:ContactAffiliation ;
            sh:description "\"contactAffiliation specifies information characterizing details of an organizational affiliation for a single contact entity.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:contactAffiliation ] ;
    sh:targetClass observable:ContactFacet .

observable:ContactList a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contact list is a set of multiple individual contacts such as that found in a digital address book.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:ContactList .

observable:ContactListFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contact list facet is a grouping of characteristics unique to a set of multiple individual contacts such as that found in a digital address book.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"contact specifies information characterizing contact details for a single entity.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:contact ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Source application specifies the software application that a particular contact or contact list is associated with.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:sourceApplication ] ;
    sh:targetClass observable:ContactListFacet .

observable:ContentData a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"Content data is a block of digital data.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:ContentData .

observable:ContentDataFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A content data facet is a grouping of characteristics unique to a block of digital data.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:dataPayload ],
        [ sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:byteOrder ],
        [ sh:description "\"The size of the data in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:sizeInBytes ],
        [ sh:description "\"Shannon entropy (a measure of randomness) of the data.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:entropy ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:isEncrypted ],
        [ sh:class <types:Hash> ;
            sh:description "\"Hash values of the data.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:hash ],
        [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:dataPayloadReferenceURL ],
        [ sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:magicNumber ],
        [ sh:description "\"MIME type of the data. For example 'text/html' or 'audio/mp3'.\"" ;
            sh:order 8 ;
            sh:path observable:mimeType ],
        [ sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:mimeClass ] ;
    sh:targetClass observable:ContentDataFacet .

observable:CookieHistory a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A cookie history is the stored web cookie history for a particular web browser.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:CookieHistory .

observable:Credential a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A credential is a single specific login and password combination for authorization of access to a digital account or system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:Credential .

observable:CredentialDump a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A credential dump is a collection (typically forcibly extracted from a system) of specific login and password combinations for authorization of access to a digital account or system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:CredentialDump .

observable:DNSCache a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An DNS cache is a temporary locally stored collection of previous Domain Name System (DNS) query results (created when an domainName is resolved to a IP address) for a particular computer.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:DNSCache .

observable:DNSRecord a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A DNS record is a single Domain Name System (DNS) artifact specifying information of a particular type (routing, authority, responsibility, security, etc.) for a specific Internet domainName.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:DNSRecord .

observable:DataRangeFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A data range facet is a grouping of characteristics unique to a particular contiguous scope within a block of digital data.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The size of the data in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:rangeSize ],
        [ sh:description "\"The type of offset defined for the range (e.g., image, file, address).\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:rangeOffsetType ],
        [ sh:description "\"The offset at which the start of data can be found, relative to the rangeOffsetType defined.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:rangeOffset ] ;
    sh:targetClass observable:DataRangeFacet .

observable:DefinedEffectFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A defined effect facet is a grouping of characteristics unique to the effect of an observable action in relation to one or more observable objects.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:DefinedEffectFacet .

observable:Device a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A device is a piece of equipment or a mechanism designed to serve a special purpose or perform a special function. [based on https://www.merriam-webster.com/dictionary/device]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:Device .

observable:DeviceFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A device facet is a grouping of characteristics unique to a piece of equipment or a mechanism designed to serve a special purpose or perform a special function. [based on https://www.merriam-webster.com/dictionary/device]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:serialNumber ],
        [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:deviceType ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:model ],
        [ sh:class <identity:Identity> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:manufacturer ] ;
    sh:targetClass observable:DeviceFacet .

observable:DigitalAccount a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A digital account is an arrangement with an entity to enable and control the provision of some capability or service within the digital domain.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:DigitalAccount .

observable:DigitalAccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A digital account facet is a grouping of characteristics unique to an arrangement with an entity to enable and control the provision of some capability or service within the digital domain.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The date and time of the last login of the account.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:lastLoginTime ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:displayName ],
        [ sh:description "\"Is the digital account disabled?\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:isDisabled ],
        [ sh:description "\"The date and time of the first login of the account.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:firstLoginTime ],
        [ sh:description "\"The login identifier for the digital account.\"" ;
            sh:order 4 ;
            sh:path observable:accountLogin ] ;
    sh:targetClass observable:DigitalAccountFacet .

observable:DigitalAddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A digital address is an identifier assigned to enable routing and management of digital communication.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:DigitalAddress .

observable:DigitalAddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A digital address facet is a grouping of characteristics unique to an identifier assigned to enable routing and management of digital communication.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ],
        [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ] ;
    sh:targetClass observable:DigitalAddressFacet .

observable:DigitalCamera a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A digital camera is a camera that captures photographs in digital memory as opposed to capturing images on photographic film\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:DigitalCamera .

observable:DigitalSignatureInfo a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A digital signature info is a value calculated via a mathematical scheme for demonstrating the authenticity of an electronic message or document.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ] ;
    sh:targetClass observable:DigitalSignatureInfo .

observable:DigitalSignatureInfoFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A digital signature info facet is a grouping of characteristics unique to a value calculated via a mathematical scheme for demonstrating the authenticity of an electronic message or document.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:UcoObject> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:certificateSubject ],
        [ sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:signatureDescription ],
        [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:signatureVerified ],
        [ sh:class <identity:Identity> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:certificateIssuer ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:signatureExists ] ;
    sh:targetClass observable:DigitalSignatureInfoFacet .

observable:Directory a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A directory is a file system cataloging structure which contains references to other computer files, and possibly other directories. On many computers, directories are known as folders, or drawers, analogous to a workbench or the traditional office filing cabinet. In UNIX a directory is implemented as a special file. [based on https://en.wikipedia.org/wiki/Directory_(computing)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:Directory .

observable:Disk a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A disk is a storage mechanism where data is recorded by various electronic, magnetic, optical, or mechanical changes to a surface layer of one or more rotating disks.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:Disk .

observable:DiskFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A disk facet is a grouping of characteristics unique to a storage mechanism where data is recorded by various electronic, magnetic, optical, or mechanical changes to a surface layer of one or more rotating disks.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The size of the disk, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:diskSize ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The partitions that reside on the disk.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:partition ],
        [ sh:description "\"The type of disk being characterized, e.g., removable.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:diskType ],
        [ sh:description "\"The amount of freeSpace on the disk, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:freeSpace ] ;
    sh:targetClass observable:DiskFacet .

observable:DiskPartition a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A disk partition is a particular managed region on a storage mechanism where data is recorded by various electronic, magnetic, optical, or mechanical changes to a surface layer of one or more rotating disks. [based on https://en.wikipedia.org/wiki/disk_storage]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:DiskPartition .

observable:DiskPartitionFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A disk partition facet is a grouping of characteristics unique to a particular managed region on a storage mechanism.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the amount of spaceUsed on the partition, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:spaceUsed ],
        [ sh:description "\"Specifies the type of partition being characterized.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:diskPartitionType ],
        [ sh:description "\"Specifies the starting offset of the partition, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:partitionOffset ],
        [ sh:description "\"Specifies the identifier of the partition, as provided by the containing partition table.  This identifier is the index value within the partition table, and is expected to be an incrementing alphanumeric value (numeric in most partition systems), not a GUID or UUID.  Sorting partitions by this index should first attempt to sort a numeric cast of the value.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:partitionID ],
        [ sh:description "\"Specifies the total amount of space available on the partition, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:totalSpace ],
        [ sh:description "\"Specifies the length of the partition, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:partitionLength ],
        [ sh:description "\"Specifies the amount of spaceLeft on the partition, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:spaceLeft ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:observableCreatedTime ],
        [ sh:description "\"Specifies the mountPoint of the partition.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:mountPoint ] ;
    sh:targetClass observable:DiskPartitionFacet .

observable:DomainName a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A domainName is an identification string that defines a realm of administrative autonomy, authority or control within the Internet. [based on https://en.wikipedia.org/wiki/Domain_name]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:DomainName .

observable:DomainNameFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A domainName facet is a grouping of characteristics unique to an identification string that defines a realm of administrative autonomy, authority or control within the Internet. [based on https://en.wikipedia.org/wiki/Domain_name]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:isTLD ],
        [ sh:description "A string value." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:value> ] ;
    sh:targetClass observable:DomainNameFacet .

observable:Drone a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A drone, unmanned aerial vehicle (UAV), is an aircraft without a human pilot, crew, or passengers that typically involve a ground-based controller and a system for communications with the UAV\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:Drone .

observable:EXIFFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An EXIF (exchangeable image file format) facet is a grouping of characteristics unique to the formats for images, sound, and ancillary tags used by digital cameras (including smartphones), scanners and other systems handling image and sound files recorded by digital cameras conformant to JEIDA/JEITA/CIPA specifications. [based on https://en.wikipedia.org/wiki/Exif]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <types:ControlledDictionary> ;
            sh:description "" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:exifData ] ;
    sh:targetClass observable:EXIFFacet .

observable:EmailAccount a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An email account is an arrangement with an entity to enable and control the provision of electronic mail (email) capabilities or services.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ] ;
    sh:targetClass observable:EmailAccount .

observable:EmailAccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An email account facet is a grouping of characteristics unique to an arrangement with an entity to enable and control the provision of electronic mail (email) capabilities or services.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"An emailAddress.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:emailAddress ] ;
    sh:targetClass observable:EmailAccountFacet .

observable:EmailAddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An emailAddress is an identifier for an electronic mailbox to which electronic mail messages (conformant to the Simple Mail Transfer Protocol (SMTP)) are sent from and delivered to.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:EmailAddress .

observable:EmailAddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An emailAddress facet is a grouping of characteristics unique to an identifier for an electronic mailbox to which electronic mail messages (conformant to the Simple Mail Transfer Protocol (SMTP)) are sent from and delivered to.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ] ;
    sh:targetClass observable:EmailAddressFacet .

observable:EmailMessage a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An email message is a message that is an instance of an electronic mail correspondence conformant to the internet message format described in RFC 5322 and related RFCs.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:EmailMessage .

observable:EmailMessageFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An email message facet is a grouping of characteristics unique to a message that is an instance of an electronic mail correspondence conformant to the internet message format described in RFC 5322 and related RFCs.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:maxCount 1 ;
            sh:order 15 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "\"One of more unique identifiers for identifying the email(s) this email is a reply to.\"" ;
            sh:maxCount 1 ;
            sh:order 21 ;
            sh:path observable:inReplyTo ],
        [ sh:description "\"Named and colored label.\"" ;
            sh:order 27 ;
            sh:path observable:labels ],
        [ sh:class <types:Dictionary> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 11 ;
            sh:path observable:otherHeaders ],
        [ sh:description "\"The priority of the email.\"" ;
            sh:maxCount 1 ;
            sh:order 23 ;
            sh:path observable:priority ],
        [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:headerRaw ],
        [ sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:isMimeEncoded ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The receiver's phone number.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 10 ;
            sh:path observable:to ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:application ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The phone number of the initiating party.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:from ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Allows the sender of a message to conceal the person entered in the BCC field from the other recipients\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path observable:bcc ],
        [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:bodyRaw ],
        [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path observable:sender ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Carbon copy: technique of producing one or more copies simultaneously.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path observable:cc ],
        [ sh:description "\"The date and time at which the message sent.\"" ;
            sh:maxCount 1 ;
            sh:order 17 ;
            sh:path observable:sentTime ],
        [ sh:maxCount 1 ;
            sh:order 13 ;
            sh:path observable:isMultipart ],
        [ sh:maxCount 1 ;
            sh:order 19 ;
            sh:path observable:contentDisposition ],
        [ sh:description "\"An unique identifier for the message.\"" ;
            sh:maxCount 1 ;
            sh:order 22 ;
            sh:path observable:messageID ],
        [ sh:order 28 ;
            sh:path observable:receivedLines ],
        [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path observable:xOriginatingIP ],
        [ sh:description "\"The date and time at which the message received.\"" ;
            sh:maxCount 1 ;
            sh:order 16 ;
            sh:path observable:receivedTime ],
        [ sh:description "\"Text forming the main content of a printed or digital work (as opposed to additional elements such as headlines, images, charts, footnotes)\"" ;
            sh:maxCount 1 ;
            sh:order 18 ;
            sh:path observable:body ],
        [ sh:class observable:MimePartType ;
            sh:description "\"A list of the MIME parts that make up the email body. This field MAY only be used if isMultipart is true.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:bodyMultipart ],
        [ sh:maxCount 1 ;
            sh:order 20 ;
            sh:path observable:contentType ],
        [ sh:description "" ;
            sh:maxCount 1 ;
            sh:order 25 ;
            sh:path observable:xMailer ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"A list of email message identifiers this email relates to.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path observable:references ],
        [ sh:description "\"Categories applied to the object.\"" ;
            sh:order 26 ;
            sh:path observable:categories ],
        [ sh:description "\"The subject of the email.\"" ;
            sh:maxCount 1 ;
            sh:order 24 ;
            sh:path observable:subject ],
        [ sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:isRead ] ;
    sh:targetClass observable:EmailMessageFacet .

observable:EmbeddedDevice a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An embedded device is a highly specialized microprocessor device meant for one or very few specific purposes and is usually embedded or included within another object or as part of a larger system. Examples include answer machine, door access logger, card scanner, etc\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:EmbeddedDevice .

observable:EncodedStreamFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An encoded stream facet is a grouping of characteristics unique to the conversion of a body of data content from one form to another form.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:encodingMethod ] ;
    sh:targetClass observable:EncodedStreamFacet .

observable:EncryptedStreamFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An encrypted stream facet is a grouping of characteristics unique to the conversion of a body of data content from one form to another obfuscated form in such a way that reversing the conversion to obtain the original data form can only be accomplished through possession and use of a specific key.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:encryptionMethod ],
        [ sh:order 2 ;
            sh:path observable:encryptionIV ],
        [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:encryptionMode ],
        [ sh:order 3 ;
            sh:path observable:encryptionKey ] ;
    sh:targetClass observable:EncryptedStreamFacet .

observable:EnvironmentVariable a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An environment variable is a grouping of characteristics unique to a dynamic-named value that can affect the way running processes will behave on a computer. [based on https://en.wikipedia.org/wiki/Environment_variable]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A string value." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:value> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:EnvironmentVariable .

observable:EventLog a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An event log is a collection of event records.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:EventLog .

observable:EventRecord a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An event record is something that happens in a digital context (e.g., operating system events).\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:EventRecord .

observable:EventRecordFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An event record facet is a grouping of characteristics unique to something that happens in a digital context (e.g., operating system events).\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"The device on which the log entry was generated.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:eventRecordDevice ],
        [ sh:description "The ending time of a time range." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <core:endTime> ],
        [ sh:description "\"The complete raw content of the event record.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:eventRecordRaw ],
        [ sh:description "\"The type of the event, for example 'information', 'warning' or 'error'.\"" ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:eventType ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:observableCreatedTime ],
        [ sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:eventID ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:application ],
        [ sh:class observable:ObservableAction ;
            sh:description "\"The action taken in response to the event.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:cyberAction ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the account referenced in an event log entry or used to run the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381228(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:account ],
        [ sh:description "\"The textual representation of the event.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:eventRecordText ],
        [ sh:description "\"The identifier of the event record.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:eventRecordID ],
        [ sh:description "The initial time of a time range." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <core:startTime> ],
        [ sh:description "\"The service that generated the event record. A single application can have multiple services generating event records.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:eventRecordServiceName ] ;
    sh:targetClass observable:EventRecordFacet .

observable:ExtInodeFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An extInode facet is a grouping of characteristics unique to a file system object (file, directory, etc.) conformant to the extended file system (EXT or related derivations) specification.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies a count of how many hard links point to an Inode.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:extHardLinkCount ],
        [ sh:description "\"Specifies the time at which the file represented by an Inode was 'deleted'.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:extDeletionTime ],
        [ sh:description "\"Specifies the EXT file type (FIFO, Directory, Regular file, Symbolic link, etc) for the Inode.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:extFileType ],
        [ sh:description "\"Specifies the read/write/execute permissions for the file represented by an EXT Inode.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:extPermissions ],
        [ sh:description "\"Specifies user flags to further protect (limit its use and modification) the file represented by an Inode.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:extFlags ],
        [ sh:description "\"The date and time at which the file Inode metadata was last modified.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:extInodeChangeTime ],
        [ sh:description "\"Specifies the group ID for the file represented by an Inode.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:extSGID ],
        [ sh:description "\"Specifies the user ID that 'owns' the file represented by an Inode.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:extSUID ],
        [ sh:description "\"Specifies a single Inode identifier.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:extInodeID ] ;
    sh:targetClass observable:ExtInodeFacet .

observable:ExtractedStringsFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An extracted strings facet is a grouping of characteristics unique to one or more sequences of characters pulled from an observable object.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ExtractedString ;
            sh:description "" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:strings ] ;
    sh:targetClass observable:ExtractedStringsFacet .

observable:File a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A file is a computer resource for recording data discretely on a computer storage device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:File .

observable:FileFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A file facet is a grouping of characteristics unique to the storage of a file (computer resource for recording data discretely in a computer storage device) on a file system (process that manages how and where data on a storage device is stored, accessed and managed). [based on https://en.wikipedia.org/computer_file and https://www.techopedia.com/definition/5510/file-system]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the filePath for the location of a file within a filesystem.\"" ;
            sh:order 9 ;
            sh:path observable:filePath ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:observableCreatedTime ],
        [ sh:description "\"The fileName extension: everything after the last dot. Not present if the file has no dot in its name.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:extension ],
        [ sh:description "\"The date and time at which the Object was accessed.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:accessedTime ],
        [ sh:description "\"Specifies the name associated with a file in a file system.\"" ;
            sh:order 8 ;
            sh:path observable:fileName ],
        [ sh:description "\"The allocation status of a file.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:allocationStatus ],
        [ sh:description "\"When used to characterize a file the sizeInBytes property conveys the recorded size of a file in a file system.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:sizeInBytes ],
        [ sh:description "\"Specifies whether a file entry represents a directory.\"" ;
            sh:order 0 ;
            sh:path observable:isDirectory ],
        [ sh:description "\"The date and time at which the file metadata was last modified.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:metadataChangeTime ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:FileFacet .

observable:FilePermissionsFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A file permissions facet is a grouping of characteristics unique to the access rights (e.g., view, change, navigate, execute) of a file on a file system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:UcoObject> ;
            sh:description "\"Specifies the owner of an observable Object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:owner ] ;
    sh:targetClass observable:FilePermissionsFacet .

observable:FileSystem a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A file system is the process that manages how and where data on a storage medium is stored, accessed and managed. [based on https://www.techopedia.com/definition/5510/file-system]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:FileSystem .

observable:FileSystemFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A file system facet is a grouping of characteristics unique to the process that manages how and where data on a storage medium is stored, accessed and managed. [based on https://www.techopedia.com/definition/5510/file-system]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The size of cluster allocation units in a file system.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:clusterSize ],
        [ sh:description "\"The specific type of a file system.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:fileSystemType ] ;
    sh:targetClass observable:FileSystemFacet .

observable:FileSystemObject a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A file system object is an informational object represented and managed within a file system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:FileSystemObject .

observable:ForumPost a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A forum post is message submitted by a user account to an online forum where the message content (and typically metadata including who posted it and when) is viewable by any party with viewing permissions on the forum.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:ForumPost .

observable:ForumPrivateMessage a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A forum private message (aka PM or DM (direct message)) is a one-to-one message from one specific user account to another specific user account on an online form where transmission is managed by the online forum platform and the message is only viewable by the parties directly involved.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:ForumPrivateMessage .

observable:FragmentFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A fragment facet is a grouping of characteristics unique to an individual piece of the content of a file.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:order 1 ;
            sh:path observable:totalFragments ],
        [ sh:order 0 ;
            sh:path observable:fragmentIndex ] ;
    sh:targetClass observable:FragmentFacet .

observable:GUI a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A GUI is a graphical user interface that allows users to interact with electronic devices through graphical icons and audio indicators such as primary notation, instead of text-based user interfaces, typed command labels or text navigation. [based on https://en.wikipedia.org/wiki/Graphical_user_interface]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:GUI .

observable:GamingConsole a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A gaming console (video game console or game console) is an electronic system that connects to a display, typically a TV or computer monitor, for the primary purpose of playing video games\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass observable:GamingConsole .

observable:GenericObservableObject a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A generic observable object is an article or unit within the digital domain.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ] ;
    sh:targetClass observable:GenericObservableObject .

observable:GeoLocationEntry a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A geolocation entry is a single application-specific geolocation entry.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:GeoLocationEntry .

observable:GeoLocationEntryFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A geolocation entry facet is a grouping of characteristics unique to a single application-specific geolocation entry.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:application ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:observableCreatedTime ],
        [ sh:class <location:Location> ;
            sh:description "\"An associated location.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <action:location> ] ;
    sh:targetClass observable:GeoLocationEntryFacet .

observable:GeoLocationLog a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A geolocation log is a record containing geolocation tracks and/or geolocation entries.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:GeoLocationLog .

observable:GeoLocationLogFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A geolocation log facet is a grouping of characteristics unique to a record containing geolocation tracks and/or geolocation entries.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:application ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:observableCreatedTime ] ;
    sh:targetClass observable:GeoLocationLogFacet .

observable:GeoLocationTrack a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A geolocation track is a set of contiguous geolocation entries representing a path/track taken.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:GeoLocationTrack .

observable:GeoLocationTrackFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A geolocation track facet is a grouping of characteristics unique to a set of contiguous geolocation entries representing a path/track taken.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:geoLocationEntry ],
        [ sh:description "The ending time of a time range." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:endTime> ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:application ],
        [ sh:description "The initial time of a time range." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:startTime> ] ;
    sh:targetClass observable:GeoLocationTrackFacet .

observable:HTTPConnection a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An HTTP connection is network connection that is conformant to the Hypertext Transfer Protocol (HTTP) standard.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ] ;
    sh:targetClass observable:HTTPConnection .

observable:HTTPConnectionFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An HTTP connection facet is a grouping of characteristics unique to portions of a network connection that are conformant to the Hypertext Transfer Protocol (HTTP) standard.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the length of an HTTP message body in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:httpMessageBodyLength ],
        [ sh:description "\"Specifies the value (typically a resource path) portion of the HTTP request line.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:requestValue ],
        [ sh:description "\"Specifies the HTTP version portion of the HTTP request line, as a lowercase string.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:requestVersion ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the data contained in an HTTP message body.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:httpMessageBodyData ],
        [ sh:description "\"Specifies the HTTP method portion of the HTTP request line, as a lowercase string.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:requestMethod ],
        [ sh:class <types:Dictionary> ;
            sh:description "\"Specifies all of the HTTP header fields that may be found in the HTTP client request\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:httpRequestHeader ] ;
    sh:targetClass observable:HTTPConnectionFacet .

observable:Hostname a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A hostname is a label that is assigned to a device connected to a computer network and that is used to identify the device in various forms of electronic communication, such as the World Wide Web. A hostname may be a domainName, if it is properly organized into the domainName system. A domainName may be a hostname if it has been assigned to an Internet host and associated with the host's IP address. [based on https://en.wikipedia.org/wiki/hostname]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:Hostname .

observable:ICMPConnection a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An ICMP connection is a network connection that is conformant to the Internet Control message Protocol (ICMP) standard.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ] ;
    sh:targetClass observable:ICMPConnection .

observable:ICMPConnectionFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An ICMP connection facet is a grouping of characteristics unique to portions of a network connection that are conformant to the Internet Control message Protocol (ICMP) standard.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the ICMP type byte.\"" ;
            sh:order 1 ;
            sh:path observable:icmpType ],
        [ sh:description "\"Specifies the ICMP code byte.\"" ;
            sh:order 0 ;
            sh:path observable:icmpCode ] ;
    sh:targetClass observable:ICMPConnectionFacet .

observable:IPAddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IP address is an Internet Protocol (IP) standards conformant identifier assigned to a device to enable routing and management of IP standards conformant communication to or from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:IPAddress .

observable:IPAddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IP address facet is a grouping of characteristics unique to an Internet Protocol (IP) standards conformant identifier assigned to a device to enable routing and management of IP standards conformant communication to or from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ] ;
    sh:targetClass observable:IPAddressFacet .

observable:IPNetmask a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IP netmask is a 32-bit 'mask' used to divide an IP address into subnets and specify the network's available hosts.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:IPNetmask .

observable:IPhone a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:IPhone .

observable:IPv4Address a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IPv4 (Internet Protocol version 4) address is an IPv4 standards conformant identifier assigned to a device to enable routing and management of IPv4 standards conformant communication to or from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:IPv4Address .

observable:IPv4AddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IPv4 (Internet Protocol version 4) address facet is a grouping of characteristics unique to an IPv4 standards conformant identifier assigned to a device to enable routing and management of IPv4 standards conformant communication to or from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ],
        [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ] ;
    sh:targetClass observable:IPv4AddressFacet .

observable:IPv6Address a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IPv6 (Internet Protocol version 6) address is an IPv6 standards conformant identifier assigned to a device to enable routing and management of IPv6 standards conformant communication to or from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:IPv6Address .

observable:IPv6AddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IPv6 (Internet Protocol version 6) address facet is a grouping of characteristics unique to an IPv6 standards conformant identifier assigned to a device to enable routing and management of IPv6 standards conformant communication to or from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ],
        [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ] ;
    sh:targetClass observable:IPv6AddressFacet .

observable:Image a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An image is a complete copy of a hard disk, memory, or other digital media.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:Image .

observable:ImageFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An image facet is a grouping of characteristics unique to a complete copy of a hard disk, memory, or other digital media.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The type of the image, e.g. EnCase, RAW or LocalFolder.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:imageType ] ;
    sh:targetClass observable:ImageFacet .

observable:InstantMessagingAddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:InstantMessagingAddress .

observable:InstantMessagingAddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An instant messagingAddress facet is a grouping of characteristics unique to an identifier assigned to enable routing and management of instant messaging digital communication.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ] ;
    sh:targetClass observable:InstantMessagingAddressFacet .

observable:Junction a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A junction is a specific NTFS (New Technology file System) reparse point to redirect a directory access to another directory which can be on the same volume or another volume. A junction is similar to a directory symbolic link but may differ on whether they are processed on the local system or on the remote file server. [based on https://jp-andre.pagesperso-orange.fr/junctions.html]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass observable:Junction .

observable:Laptop a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A laptop, laptop computer, or notebook computer is a small, portable personal computer with a screen and alphanumeric keyboard. These typically have a clam shell form factor with the screen mounted on the inside of the upper lid and the keyboard on the inside of the lower lid, although 2-in-1 PCs with a detachable keyboard are often marketed as laptops or as having a laptop mode. (Devices categorized by their manufacturer as a laptop)\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass observable:Laptop .

observable:Library a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A library is a suite of data and programming code that is used to develop software programs and applications. [based on https://www.techopedia.com/definition/3828/software-library]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ] ;
    sh:targetClass observable:Library .

observable:LibraryFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A library facet is a grouping of characteristics unique to a suite of data and programming code that is used to develop software programs and applications. [based on https://www.techopedia.com/definition/3828/software-library]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the type of library being characterized.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:libraryType ] ;
    sh:targetClass observable:LibraryFacet .

observable:MACAddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A MAC address is a media access control standards conformant identifier assigned to a networkInterface to enable routing and management of communications at the data link layer of a network segment.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:MACAddress .

observable:MACAddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A MAC address facet is a grouping of characteristics unique to a media access control standards conformant identifier assigned to a networkInterface to enable routing and management of communications at the data link layer of a network segment.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ] ;
    sh:targetClass observable:MACAddressFacet .

observable:Memory a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"memory is a particular region of temporary information storage (e.g., RAM (random access memory), ROM (read only memory)) on a digital device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:Memory .

observable:MemoryFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A memory facet is a grouping of characteristics unique to a particular region of temporary information storage (e.g., RAM (random access memory), ROM (read only memory)) on a digital device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The blockType property specifies the blockType of a particular memory object.\"" ;
            sh:in ( "Bit-mapped" "Byte-mapped" "Initialized" "Overlay" "Uninitialized" ) ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:blockType ],
        [ sh:description """\"\"\"The regionStartAddress property specifies the starting address of the particular memory region.
    \"\"\"""" ;
            sh:order 5 ;
            sh:path observable:regionStartAddress ],
        [ sh:description "\"The regionEndAddress property specifies the ending address of the particular memory region.\"" ;
            sh:order 4 ;
            sh:path observable:regionEndAddress ],
        [ sh:description "\"The isMapped property specifies whether or not the particular memory object has been assigned a byte-for-byte correlation with some portion of a file or file-like resource.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:isMapped ],
        [ sh:description "\"The isVolatile property specifies whether or not the particular memory object isVolatile.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:isVolatile ],
        [ sh:description "\"The isProtected property specifies whether or not the particular memory object isProtected (read/write only from the process that allocated it).\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:isProtected ],
        [ sh:description "\"The regionSize property specifies the size of the particular memory region, in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:regionSize ],
        [ sh:description "\"The isInjected property specifies whether or not the particular memory object has had data/code injected into it by another process.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:isInjected ] ;
    sh:targetClass observable:MemoryFacet .

observable:Message a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A message is a discrete unit of electronic communication intended by the source for consumption by some recipient or group of recipients. [based on https://en.wikipedia.org/wiki/message]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:Message .

observable:MessageFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A message facet is a grouping of characteristics unique to a discrete unit of electronic communication intended by the source for consumption by some recipient or group of recipients. [based on https://en.wikipedia.org/wiki/message]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"The phone number of the initiating party.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:from ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:application ],
        [ sh:description "\"The contents of the message.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:messageText ],
        [ sh:description "\"messageType specifies what sort of message (email, chat, SMS, etc) a message is.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:messageType ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The receiver's phone number.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:to ],
        [ sh:description "\"An identifier for the session from which the message originates.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:sessionID ],
        [ sh:description "\"An unique identifier for the message.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:messageID ],
        [ sh:description "\"The date and time at which the message sent.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:sentTime ] ;
    sh:targetClass observable:MessageFacet .

observable:MessageThreadFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A messageThread facet is a grouping of characteristics unique to a running commentary of electronic messages pertaining to one topic or question.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <types:Thread> ;
            sh:description "\"The contents of origin items in the Thread linked by messageThread must be Message objects.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:messageThreadOriginItems ],
        [ sh:class <types:Thread> ;
            sh:description "\"The contents of ordered items in the Thread linked by messageThread must be Message objects.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:messageThreadOrderedItems ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The supporting (non-primary) performers of an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path <action:participant> ],
        [ sh:class <types:Thread> ;
            sh:description "\"The contents of unordered items in the Thread linked by messageThread must be Message objects.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:messageThreadUnorderedItems ],
        [ sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:visibility ],
        [ sh:class <types:Thread> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path observable:messageThread ],
        [ sh:class <types:Thread> ;
            sh:description "\"The contents of terminal items in the Thread linked by messageThread must be Message objects.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:messageThreadTerminalItems ] ;
    sh:targetClass observable:MessageThreadFacet .

observable:MftRecordFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An MFT record facet is a grouping of characteristics unique to the details of a single file as managed in an NTFS (new technology filesystem) master file table (which is a collection of information about all files on an NTFS filesystem). [based on https://docs.microsoft.com/en-us/windows/win32/devnotes/master-file-table]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The modification date and time recorded in an MFT entry $ file_Name attribute.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:mftFileNameModifiedTime ],
        [ sh:description "\"Specifies the record number for the file within an NTFS Master file Table.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:mftFileID ],
        [ sh:description "\"The access date and time recorded in an MFT entry $ file_Name attribute.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:mftFileNameAccessedTime ],
        [ sh:description "\"Specifies basic permissions for the file (Read-Only, Hidden, Archive, Compressed, etc.).\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:mftFlags ],
        [ sh:description "\"Specifies the security ID (key in the $SII Index and $SDS DataStream in the file $Secure) for an NTFS file.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:ntfsOwnerSID ],
        [ sh:description "\" Specifies the length of an NTFS fileName, in unicode characters.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:mftFileNameLength ],
        [ sh:description "\"Specifies the number of directory entries that reference an NTFS file record.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:ntfsHardLinkCount ],
        [ sh:description "\"The metadata modification date and time recorded in an MFT entry $ file_Name attribute.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:mftFileNameRecordChangeTme ],
        [ sh:description "\"Specifies the record number within an NTFS Master file Table for parent directory of the file.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:mftParentID ],
        [ sh:description "\"Specifies the identifier of the file owner, from the security index.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:ntfsOwnerID ],
        [ sh:description "\"The creationDate and time recorded in an MFT entry $ file_Name attribute.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:mftFileNameCreatedTime ],
        [ sh:description "\"The date and time at which an NTFS file metadata was last modified.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:mftRecordChangeTime ] ;
    sh:targetClass observable:MftRecordFacet .

observable:MobileAccount a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A mobile account is an arrangement with an entity to enable and control the provision of some capability or service on a portable computing device. [based on https://www.lexico.com/definition/mobile_device]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:MobileAccount .

observable:MobileAccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A mobile account facet is a grouping of characteristics unique to an arrangement with an entity to enable and control the provision of some capability or service on a portable computing device. [based on https://www.lexico.com/definition/mobile_device]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"???.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:MSISDNType ],
        [ sh:description "\"Mobile Station International Subscriber Directory Number (MSISDN) is a number used to identify a mobile phone number internationally. MSISDN is defined by the E.164 numbering plan. This number includes a country code and a National Destination Code which identifies the subscriber's operator.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:MSISDN ],
        [ sh:description "\"An International Mobile Subscriber Identity (IMSI) is a unique identification associated with all GSM and UMTS network mobile phone users. It is stored as a 64-bit field in the SIM inside the phone and is sent by the phone to the network.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:IMSI ] ;
    sh:targetClass observable:MobileAccountFacet .

observable:MobileDevice a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A mobile device is a portable computing device. [based on https://www.lexico.com.definition/mobile_device]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:MobileDevice .

observable:MobileDeviceFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A mobile device facet is a grouping of characteristics unique to a portable computing device. [based on https://www.lexico.com/definition/mobile_device]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Name configured withing Bluetooth settings on a device.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:bluetoothDeviceName ],
        [ sh:description "\"A code or password set on a device for security that must be entered to gain access to the device.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:keypadUnlockCode ],
        [ sh:description "\"The generalizedTime value on the mobile device when it was processed.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:clockSetting ],
        [ sh:description "\"The number of bytes that can be stored on a SIM card.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:storageCapacityInBytes ],
        [ sh:description "\"The date and time that a device was activated.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:phoneActivationTime ],
        [ sh:description "\"International Mobile Equipment Identity (IMEI).\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:IMEI ],
        [ sh:description "\"???.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:mockLocationsAllowed ],
        [ sh:description "\"Electronic Serial Number.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:ESN ],
        [ sh:description "Network allowing computers to share resources and communicate with each other" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:network ] ;
    sh:targetClass observable:MobileDeviceFacet .

observable:MobilePhone a sh:NodeShape ;
    sh:closed false ;
    sh:description "\"A mobile phone is a portable telephone that at least can make and receive calls over a radio frequency link while the user is moving within a telephone service area. This category encompasses all types of mobiles, simple and smart and satellite ones all together\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:MobilePhone .

observable:Mutex a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A mutex is a mechanism that enforces limits on access to a resource when there are many threads of execution. A mutex is designed to enforce a mutual exclusion concurrency control policy, and with a variety of possible methods there exists multiple unique implementations for different applications. [based on https://en.wikipedia.org/wiki/Lock_(computer_science)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:Mutex .

observable:MutexFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A mutex facet is a grouping of characteristics unique to a mechanism that enforces limits on access to a resource when there are many threads of execution. A mutex is designed to enforce a mutual exclusion concurrency control policy, and with a variety of possible methods there exists multiple unique implementations for different applications. [based on https://en.wikipedia.org/wiki/Lock_(computer_science)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:isNamed ],
        [ sh:description "\"Specifies the name identifier for a specific instance of a mechanism that enforces limits on access to a resource when there are many threads of execution .\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:mutexName ] ;
    sh:targetClass observable:MutexFacet .

observable:NTFSFile a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An NTFS file is a New Technology file System (NTFS) file.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:NTFSFile .

observable:NTFSFileFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An NTFS file facet is a grouping of characteristics unique to a file on an NTFS (new technology filesystem) file system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"A unique identifier for the file within the filesystem.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:entryID ],
        [ sh:class observable:AlternateDataStream ;
            sh:description "" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:alternateDataStreams ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:sid ] ;
    sh:targetClass observable:NTFSFileFacet .

observable:NTFSFilePermissionsFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An NTFS file permissions facet is a grouping of characteristics unique to the access rights (e.g., view, change, navigate, execute) of a file on an NTFS (new technology filesystem) file system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:NTFSFilePermissionsFacet .

observable:NamedPipe a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A named pipe is a mechanism for FIFO (first-in-first-out) inter-process communication. It is persisted as a filesystem object (that can be deleted like any other file), can be written to or read from by any process and exists beyond the lifespan of any process interacting with it (unlike simple anonymous pipes). [based on https://en.wikipedia.org/wiki/Named_pipe]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:NamedPipe .

observable:NetworkAppliance a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A network appliance is a purpose-built computer with software or firmware that is designed to provide a specific network management function.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:NetworkAppliance .

observable:NetworkConnection a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A network connection is a connection (completed or attempted) across a digital network (a group of two or more computer systems linked together). [based on https://www.webopedia.com/TERM/N/network.html]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:NetworkConnection .

observable:NetworkConnectionFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A network connection facet is a grouping of characteristics unique to a connection (complete or attempted) accross a digital network (a group of two or more computer systems linked together). [based on https://www.webopedia.com/TERM/N/network.html]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The ending time of a time range." ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path <core:endTime> ],
        [ sh:class <types:ControlledDictionary> ;
            sh:description "\"Specifies the protocols involved in the network connection, along with their corresponding state.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:protocols ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"Specifies the source(s) of the network connection.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:src ],
        [ sh:description "The initial time of a time range." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <core:startTime> ],
        [ sh:description "\"Indicates whether the network connection is still active.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:isActive ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the destination(s) of the network connection.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:dst ],
        [ sh:description "\"Specifies the destinationPort used in the connection, as an integer in the range of 0 - 65535.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:destinationPort ],
        [ sh:description "\"Specifies the sourcePort used in the connection, as an integer in the range of 0 - 65535.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:sourcePort ] ;
    sh:targetClass observable:NetworkConnectionFacet .

observable:NetworkFlow a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A network flow is a sequence of data transiting one or more digital network (a group or two or more computer systems linked together) connections. [based on https://www.webopedia.com/TERM/N/network.html]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:NetworkFlow .

observable:NetworkFlowFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A network flow facet is a grouping of characteristics unique to a sequence of data transiting one or more digital network (a group of two or more computer systems linked together) connections. [based on https://www.webopedia.com/TERM/N/network.html]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:dstPackets ],
        [ sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:srcPackets ],
        [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:dstPayload ],
        [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:dstBytes ],
        [ sh:class <types:Dictionary> ;
            sh:description "\"Specifies any IP Flow Information Export (IPFIX) data for the network traffic flow.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:ipfix ],
        [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:srcPayload ],
        [ sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:srcBytes ] ;
    sh:targetClass observable:NetworkFlowFacet .

observable:NetworkInterface a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A networkInterface is a software or hardware interface between two pieces of equipment or protocol layers in a computer network.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:NetworkInterface .

observable:NetworkInterfaceFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A networkInterface facet is a grouping of characteristics unique to a software or hardware interface between two pieces of equipment or protocol layers in a computer network.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the list of DHCP server IP Addresses used by the networkInterface.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:dhcpServer ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the list of IP Gateway IP Addresses used by the networkInterface.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:ipGateway ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the MAC or hardware address of the physical network card.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:macAddress ],
        [ sh:description "\"Specifies the date/time that the DHCP lease was obtained on the networkInterface.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:dhcpLeaseObtained ],
        [ sh:description "\"Specifies the date/time that the DHCP lease obtained on the networkInterface expires.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:dhcpLeaseExpires ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the list of IP addresses used by the networkInterface.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:ip ],
        [ sh:description "\"Specifies the name of the network adapter used by the networkInterface.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:adapterName ] ;
    sh:targetClass observable:NetworkInterfaceFacet .

observable:NetworkProtocol a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A network protocol is an established set of structured rules that determine how data is transmitted between different devices in the same network. Essentially, it allows connected devices to communicate with each other, regardless of any differences in their internal processes, structure or design. [based on https://www.comptia.org/content/guides/what-is-a-network-protocol]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:NetworkProtocol .

observable:NetworkRoute a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A network route is a specific path (of specific network nodes, connections and protocols) for traffic in a network or between or across multiple networks.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:NetworkRoute .

observable:NetworkSocketAddressFamily a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"The address family parameter on a socket() API determines the format of the address structure to be used on socket APIs.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:NetworkSocketAddressFamily .

observable:NetworkSocketProtocolFamily a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"The protocol family specifies the protocol scheme that is used by the Socket class to resolve an address.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:NetworkSocketProtocolFamily .

observable:NetworkSocketType a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"Depending on the type and importance of data exchanged between the applications via sockets, different types of network sockets are implemented.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:NetworkSocketType .

observable:NetworkSubnet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A network subnet is a logical subdivision of an IP network. [based on https://en.wikipedia.org/wiki/Subnetwork]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:NetworkSubnet .

observable:Note a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A note is a brief textual record.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:Note .

observable:NoteFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A note facet is a grouping of characteristics unique to a brief textual record.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:application ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:observableCreatedTime ],
        [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:text ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:NoteFacet .

observable:Observable a sh:NodeShape ;
    sh:closed false ;
    sh:description "\"An observable is a characterizable item or action within the digital domain.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:Observable .

observable:ObservablePattern a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An observable pattern is a grouping of characteristics unique to a logical pattern composed of observable object and observable action properties.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:ObservablePattern .

observable:ObservableRelationship a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An observable relationship is a grouping of characteristics unique to an assertion of an association between two observable objects.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <core:createdBy> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path <core:specVersion> ],
        [ sh:description "A specification whether or not a relationship assertion is limited to the context FROM a source object(s) TO a target object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 1 ;
            sh:path <core:isDirectional> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 8 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 12 ;
            sh:path <core:objectMarking> ],
        [ sh:class <core:UcoObject> ;
            sh:description "The originating node of a specified relationship." ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path <core:source> ],
        [ sh:class <core:UcoObject> ;
            sh:description "The terminating node of a specified relationship." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path <core:target> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 9 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <rdfs:label> ],
        [ sh:description "The initial time of a time range." ;
            sh:order 4 ;
            sh:path <core:startTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 10 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 7 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 15 ;
            sh:path <core:tag> ],
        [ sh:description "The ending time of a time range." ;
            sh:order 0 ;
            sh:path <core:endTime> ],
        [ sh:description "A characterization of the nature of a relationship between objects." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:kindOfRelationship> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:ObservableRelationship .

observable:Observation a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An observation is a temporal perception of an observable.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The number of times that the action was performed.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <action:actionCount> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 15 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The primary performer of an action.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <action:performer> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 14 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 20 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path <core:createdBy> ],
        [ sh:description "\"The current state of the action.\"" ;
            sh:in ( "Complete/Finish" "Error" "Fail" "Ongoing" "Pending" "Success" "Unknown" ) ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path <action:actionStatus> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things used to perform an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path <action:instrument> ],
        [ sh:class <location:Location> ;
            sh:description "\"The locations where an action occurs.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path <action:location> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 17 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things that the action is performed on/against.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path <core:object> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 19 ;
            sh:path <core:objectMarking> ],
        [ sh:class <action:Action> ;
            sh:description "\"References to other actions that make up part of a larger more complex action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <action:subaction> ],
        [ sh:description "A generic tag/label." ;
            sh:order 22 ;
            sh:path <core:tag> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The supporting (non-primary) performers of an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <action:participant> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"A characterization of the differences between the expected and the actual performance of the action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path <action:error> ],
        [ sh:description "\"The time at which performance of the action began.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:startTime> ],
        [ sh:description "\"The time at which performance of the action ended.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:endTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 21 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things resulting from performing an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <action:result> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The environment wherein an action occurs.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <action:environment> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 16 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:Observation .

observable:OnlineService a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An online service is a particular provision mechanism of information access, distribution or manipulation over the Internet.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ] ;
    sh:targetClass observable:OnlineService .

observable:OnlineServiceFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An online service facet is a grouping of characteristics unique to a particular provision mechanism of information access, distribution or manipulation over the Internet\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies a location on the Internet\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:inetLocation ],
        [ sh:class <location:Location> ;
            sh:description "\"An associated location.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <action:location> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:OnlineServiceFacet .

observable:OperatingSystem a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An operating system is the software that manages computer hardware, software resources, and provides common services for computer programs. [based on https://en.wikipedia.org/wiki/Operating_system]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:OperatingSystem .

observable:OperatingSystemFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An operating system facet is a grouping of characteristics unique to the software that manages computer hardware, software resources, and provides common services for computer programs. [based on https://en.wikipedia.org/wiki/Operating_system]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:version ],
        [ sh:description "\"Specifies the bitness of the operating system (i.e. 32 or 64). Note that this is potentially different from the word size of the underlying hardware or CPU. A 32-bit operating sytem can be installed on a machine running a 64-bit processor.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:bitness ],
        [ sh:description "\"Limits advertising tracking if enabled. [based on https://developer.android.com/reference/androidx/ads/identifier/AdvertisingIdInfo]\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:isLimitAdTrackingEnabled ],
        [ sh:description "\"Specifies the date the operating sytem or application was installed.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:installDate ],
        [ sh:description "\"Advertising ID as a UUID. [based on https://developer.android.com/reference/androidx/ads/identifier/AdvertisingIdInfo]\"" ;
            sh:order 6 ;
            sh:path observable:advertisingID ],
        [ sh:class <types:Dictionary> ;
            sh:description "\"A list of environmentVariables associated with the process.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:environmentVariables ],
        [ sh:class <identity:Identity> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:manufacturer ] ;
    sh:targetClass observable:OperatingSystemFacet .

observable:PDFFile a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A PDF file is a Portable Document Format (PDF) file.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:PDFFile .

observable:PDFFileFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A PDF file facet is a grouping of characteristics unique to a PDF (Portable Document Format) file.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The PDF CreationDate property is defined in ISO 32000-1:2008 as 'The date and time the document was created, in human-readable form' (Table 317).  As a UCO property, its value is converted to xsd:dateTime.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:pdfCreationDate ],
        [ sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:version ],
        [ sh:class <types:ControlledDictionary> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:documentInformationDictionary ],
        [ sh:order 6 ;
            sh:path observable:pdfId0 ],
        [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:isOptimized ],
        [ sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:pdfId1 ],
        [ sh:description "\"The PDF ModDate property is defined in ISO 32000-1:2008 as 'The date and time the document was most recently modified, in human-readable form' (Table 317).  As a UCO property, its value is converted to xsd:dateTime.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:pdfModDate ] ;
    sh:targetClass observable:PDFFileFacet .

observable:PathRelationFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A path relation facet is a grouping of characteristics unique to the location of one object within another containing object.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the location of one object within another containing object.\"" ;
            sh:order 0 ;
            sh:path observable:path ] ;
    sh:targetClass observable:PathRelationFacet .

observable:PaymentCard a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A payment card is a physical token that is part of a payment system issued by financial institutions, such as a bank, to a customer that enables its owner (the cardholder) to access the funds in the customer's designated bank accounts, or through a credit account and make payments by electronic funds transfer and access automated teller machines (ATMs). [based on https://en.wikipedia.org/wiki/Payment_card]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:PaymentCard .

observable:PhoneAccount a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A phone account is an arrangement with an entity to enable and control the provision of a telephony capability or service.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ] ;
    sh:targetClass observable:PhoneAccount .

observable:PhoneAccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A phone account facet is a grouping of characteristics unique to an arrangement with an entity to enable and control the provision of a telephony capability or service.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"A phoneNumber(account).\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:phoneNumber ] ;
    sh:targetClass observable:PhoneAccountFacet .

observable:Pipe a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A pipe is a mechanism for one-way inter-process communication using message passing where data written by one process is buffered by the operating system until it isRead by the next process, and this uni-directional channel disappears when the processes are completed. [based on https://en.wikipedia.org/wiki/Pipeline_(Unix) ; https://en.wikipedia.org/wiki/Anonymous_pipe]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:Pipe .

observable:Post a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A post is message submitted to an online discussion/publishing site (forum, blog, etc.).\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:Post .

observable:Process a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A process is an instance of a computer program executed on an operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ] ;
    sh:targetClass observable:Process .

observable:ProcessFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A process facet is a grouping of characteristics unique to an instance of a computer program executed on an operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The process ID, or PID, of the process.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:pid ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:observableCreatedTime ],
        [ sh:description "\"The time at which the process exited.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:exitTime ],
        [ sh:description "\"A list of arguments utilized in initiating the process.\"" ;
            sh:order 11 ;
            sh:path observable:arguments ],
        [ sh:description "\"Specifies a list of statuses for a given Whois entry.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:status ],
        [ sh:description "\"The isHidden property specifies whether the process isHidden or not.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:isHidden ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The process that created this process.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:parent ],
        [ sh:class <types:Dictionary> ;
            sh:description "\"A list of environmentVariables associated with the process.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:environmentVariables ],
        [ sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:currentWorkingDirectory ],
        [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:binary ],
        [ sh:description "\"A small number passed from the process to the parent process when it has finished executing. In general, 0 indicates successful termination, any other number indicates a failure.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:exitStatus ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The user that created/owns the process.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:creatorUser ] ;
    sh:targetClass observable:ProcessFacet .

observable:ProcessThread a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A process thread is the smallest sequence of programmed instructions that can be managed independently by a scheduler on a computer, which is typically a part of the operating system. It is a component of a process. Multiple threads can exist within one process, executing concurrently and sharing resources such as memory, while different processes do not share these resources. In particular, the threads of a process share its executable code and the values of its dynamically allocated variables and non-thread-local global variables at any given time. [based on https://en.wikipedia.org/wiki/Thread_(computing)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:ProcessThread .

observable:Profile a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A profile is an explicit digital representation of identity and characteristics of the owner of a single user account associated with an online service or application. [based on https://en.wikipedia.org/wiki/User_profile]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:Profile .

observable:ProfileFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A profile facet is a grouping of characteristics unique to an explicit digital representation of identity and characteristics of the owner of a single user account associated with an online service or application. [based on https://en.wikipedia.org/wiki/User_profile]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ContactURL ;
            sh:description "\"contactURL specifies information characterizing details for contacting a contact entity by Uniform Resource Locator (URL).\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path observable:contactURL ],
        [ sh:class observable:ContactMessaging ;
            sh:description "\"contactMessaging specifies information characterizing details for contacting a contact entity by digital messaging.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:contactMessaging ],
        [ sh:description "\"Specifies the date and time the profile was created\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:profileCreated ],
        [ sh:class <identity:Identity> ;
            sh:description "\"Specifies the identity associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:profileIdentity ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the online service account associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path observable:profileAccount ],
        [ sh:class observable:ContactAddress ;
            sh:description "\"contactAddress specifies information characterizing a geolocation address of a contact entity.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:contactAddress ],
        [ sh:class observable:ContactEmail ;
            sh:description "\"contactEmail specifies information characterizing details for contacting a contact entity by email.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:contactEmail ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the online service associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path observable:profileService ],
        [ sh:class observable:ContactPhone ;
            sh:description "\"contactPhone specifies information characterizing details for contacting a contact entity by telephone.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:contactPhone ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <rdfs:label> ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:displayName ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the website URL associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path observable:profileWebsite ] ;
    sh:targetClass observable:ProfileFacet .

observable:PropertiesEnumeratedEffectFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A properties enumerated effect facet is a grouping of characteristics unique to the effects of actions upon observable objects where a characteristic of the observable object is enumerated. An example of this would be startup parameters for a process.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the properties that were enumerated as a result of the action on the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:properties ] ;
    sh:targetClass observable:PropertiesEnumeratedEffectFacet .

observable:PropertyReadEffectFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A properties read effect facet is a grouping of characteristics unique to the effects of actions upon observable objects where a characteristic isRead from an observable object. An example of this would be the current running state of a process.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A string value." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:value> ],
        [ sh:description "\"Specifies the Name of the property being read.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:propertyName ] ;
    sh:targetClass observable:PropertyReadEffectFacet .

observable:ProtocolConverter a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A protocol converter is a device that converts from one protocol to another (e.g. SD to USB, SATA to USB, etc\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:ProtocolConverter .

observable:RasterPicture a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A raster picture is a raster (or bitmap) image.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:RasterPicture .

observable:RasterPictureFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A raster picture facet is a grouping of characteristics unique to a raster (or bitmap) image.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"The name/make of the camera that was used for taking the picture.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:camera ],
        [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:bitsPerPixel ],
        [ sh:description "\"The width of the picture in pixels.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:pictureWidth ],
        [ sh:description "\"The type of a picture, for example a thumbnail.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:pictureType ],
        [ sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:imageCompressionMethod ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:pictureHeight ] ;
    sh:targetClass observable:RasterPictureFacet .

observable:RecoveredObject a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An observable object that was the result of a recovery operation.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass observable:RecoveredObject .

observable:RecoveredObjectFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"Recoverability status of name, metadata, and content.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the recoverability status of the name of an object.\"" ;
            sh:in ( "recovered" "partially recovered" "overwritten" "unknown" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:nameRecoveredStatus ],
        [ sh:description "\"Specifies the recoverability status of the metadata of an object.\"" ;
            sh:in ( "recovered" "partially recovered" "overwritten" "unknown" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:metadataRecoveredStatus ],
        [ sh:description "\"Specifies the recoverability status of the content of an object.\"" ;
            sh:in ( "recovered" "partially recovered" "overwritten" "unknown" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:contentRecoveredStatus ] ;
    sh:targetClass observable:RecoveredObjectFacet .

observable:RegistryDatatype a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"Data types used in Windows operating systems Registry, and the earlier IBM/Microsoft OS/2 operating system\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:RegistryDatatype .

observable:ReparsePoint a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A reparse point is a type of NTFS (New Technology file System) object which is an optional attribute of files and directories meant to define some sort of preprocessing before accessing the said file or directory. For instance reparse points can be used to redirect access to files which have been moved to long term storage so that some application would retrieve them and make them directly accessible. A reparse point contains a reparse tag and data that are interpreted by a filesystem filter identified by the tag. [based on https://jp-andre.pagesperso-orange.fr/junctions.html ; https://en.wikipedia.org/wiki/NTFS_reparse_point]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:ReparsePoint .

observable:SIMCard a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A SIM card is a subscriber identification module card intended to securely store the international mobile subscriber identity (IMSI) number and its related key, which are used to identify and authenticate subscribers on mobile telephony. [based on https://en.wikipedia.org/wiki/SIM_card]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:SIMCard .

observable:SIMCardFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A SIM card facet is a grouping of characteristics unique to a subscriber identification module card intended to securely store the international mobile subscriber identity (IMSI) number and its related key, which are used to identify and authenticate subscribers on mobile telephony devices (such as mobile phones and computers). [based on https://en.wikipedia.org/wiki/SIM_card]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Integrated circuit card identifier (http://www.itu.int/).\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:ICCID ],
        [ sh:description "\"The form of SIM card such as SIM, Micro SIM, Nano SIM.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:SIMForm ],
        [ sh:description "\"Personal Unlocking Key (PUK) to unlock the SIM card.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:PUK ],
        [ sh:description "\"An International Mobile Subscriber Identity (IMSI) is a unique identification associated with all GSM and UMTS network mobile phone users. It is stored as a 64-bit field in the SIM inside the phone and is sent by the phone to the network.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:IMSI ],
        [ sh:description "\"The number of bytes that can be stored on a SIM card.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:storageCapacityInBytes ],
        [ sh:description "\"Personal Identification Number (PIN).\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:PIN ],
        [ sh:class <identity:Identity> ;
            sh:description "\"Telecommunications service provider that sold the SIM card.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:carrier ],
        [ sh:description """"The type of SIM card such as SIM, USIM, UICC."
  broad_mappings:
- wikidata:Q41349  # smart card""" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:SIMType ] ;
    sh:targetClass observable:SIMCardFacet .

observable:SIPAaddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A SIP address is an identifier for Session Initiation Protocol (SIP) communication.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ] ;
    sh:targetClass observable:SIPAaddress .

observable:SIPAddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A SIP address facet is a grouping of characteristics unique to a Session Initiation Protocol (SIP) standards conformant identifier assigned to a user to enable routing and management of SIP standards conformant communication to or from that user loosely coupled from any particular devices.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ],
        [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ] ;
    sh:targetClass observable:SIPAddressFacet .

observable:SMSMessage a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An SMS message is a message conformant to the short message service (SMS) communication protocol standards.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:SMSMessage .

observable:SMSMessageFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A SMS message facet is a grouping of characteristics unique to a message conformant to the short message service (SMS) communication protocol standards.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:isRead ] ;
    sh:targetClass observable:SMSMessageFacet .

observable:SQLiteBlob a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An SQLite blob is a blob (binary large object) of data within an SQLite database. [based on https://en.wikipedia.org/wiki/SQLite]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:SQLiteBlob .

observable:SQLiteBlobFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An SQLite blob facet is a grouping of characteristics unique to a blob (binary large object) of data within an SQLite database. [based on https://en.wikipedia.org/wiki/SQLite]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:rowCondition ],
        [ sh:description "\"Identifier, Column name expressions\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:columnName ],
        [ sh:order 0 ;
            sh:path observable:rowIndex ],
        [ sh:description "\"The table containing a specified database record.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:tableName ] ;
    sh:targetClass observable:SQLiteBlobFacet .

observable:SecurityAppliance a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A security appliance is a purpose-built computer with software or firmware that is designed to provide a specific security function to protect computer networks.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:SecurityAppliance .

observable:Semaphore a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A semaphore is a variable or abstract dataType used to control access to a common resource by multiple processes and avoid critical section problems in a concurrent system such as a multitasking operating system. [based on https://en.wikipedia.org/wiki/semaphore_(programming)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:Semaphore .

observable:SendControlCodeEffectFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A send controlCode effect facet is a grouping of characteristics unique to the effects of actions upon observable objects where a controlCode, or other control-oriented communication signal, is sent to the observable object. An example of this would be an action sending a controlCode changing the running state of a process.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the actual controlCode that was sent to the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:controlCode ] ;
    sh:targetClass observable:SendControlCodeEffectFacet .

observable:Server a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A server is a server rack-mount based computer, minicomputer, supercomputer, etc\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:Server .

observable:ShopListing a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A shop listing is a listing of offered products on an online marketplace/shop.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:ShopListing .

observable:SmartDevice a sh:NodeShape ;
    sh:closed false ;
    sh:description "\"A smart device is a microprocessor IoT device that is expected to be connected directly to cloud-based networks or via smartphone\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:SmartDevice .

observable:SmartPhone a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A smartphone is a portable device that combines mobile telephone and computing functions into one unit.  Examples include iPhone, Samsung Galaxy, Huawei, Blackberry. (Inferred by model and OperatingSystemFacet)\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:SmartPhone .

observable:Snapshot a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A snapshot is a file system object representing a snapshot of the contents of a part of a file system at a point in time.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:Snapshot .

observable:Socket a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A socket is a special file used for inter-process communication, which enables communication between two processes. In addition to sending data, processes can send file descriptors across a Unix domain socket connection using the sendmsg() and recvmsg() system calls. Unlike named pipes which allow only unidirectional data flow, sockets are fully duplex-capable. [based on https://en.wikipedia.org/wiki/Unix_file_types]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:Socket .

observable:SocketAddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A socket address (combining and IP address and a port number) is a composite identifier for a network socket endpoint supporting internet protocol communications.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:SocketAddress .

observable:Software a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"Software is a definitely scoped instance of a collection of data or computer instructions that tell the computer how to work. [based on https://en.wikipedia.org/wiki/Software]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:Software .

observable:SoftwareFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A software facet is a grouping of characteristics unique to a software program (a definitively scoped instance of a collection of data or computer instructions that tell the computer how to work). [based on https://en.wikipedia.org/wiki/Software]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the SWID tag for the software.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:swid ],
        [ sh:description """"Specifies the language the string is written in, e.g. English.
    For consistency, it is strongly recommended to use the ISO 639-2 language code, if available. Please see http://www.loc.gov/standards/iso639-2/php/code_list.php for a list of ISO 639-2 codes.\"""" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:language ],
        [ sh:description "\"Specifies the Common Platform Enumeration identifier for the software.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:cpeid ],
        [ sh:class <identity:Identity> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:manufacturer ],
        [ sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:version ] ;
    sh:targetClass observable:SoftwareFacet .

observable:StateChangeEffectFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A state change effect facet is a grouping of characteristics unique to the effects of actions upon observable objects where a state of the observable object is changed.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the observable object and its properties as they were before the state change effect occurred.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:oldObject ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the observable object and its properties as they are after the state change effect occurred.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:newObject ] ;
    sh:targetClass observable:StateChangeEffectFacet .

observable:StorageMedium a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A storage medium is any digital storage device that applies electromagnetic or optical surfaces, or depends solely on electronic circuits as solid state storage, for storing digital data. Examples include HDD (PATA), SATA, SSD, Optical, memory_Card, Tape, etc\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:StorageMedium .

observable:SymbolicLink a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A symbolic link is a file that contains a reference to another file or directory in the form of an absolute or relative path and that affects pathname resolution. [based on https://en.wikipedia.org/wiki/Symbolic_link]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:SymbolicLink .

observable:SymbolicLinkFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A symbolic link facet is a grouping of characteristics unique to a file that contains a reference to another file or directory in the form of an absolute or relative path and that affects pathname resolution. [based on https://en.wikipedia.org/wiki/Symbolic_link]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the file targeted by a symbolic link.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:targetFile ] ;
    sh:targetClass observable:SymbolicLinkFacet .

observable:TCPConnection a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A TCP connection is a network connection that is conformant to the Transfer\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:TCPConnection .

observable:TCPConnectionFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A TCP connection facet is a grouping of characteristics unique to portions of a network connection that are conformant to the Transmission Control Protocl (TCP) standard.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the destination TCP flags. \"" ;
            sh:order 1 ;
            sh:path observable:destinationFlags ],
        [ sh:description "\"Specifies the source TCP flags.\"" ;
            sh:order 0 ;
            sh:path observable:sourceFlags ] ;
    sh:targetClass observable:TCPConnectionFacet .

observable:TableField a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A database table field and its associated value contained within a relational database.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:TableField .

observable:TableFieldFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A database record facet contains properties associated with a specific table record value from a database.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Whether the specified database record field is null.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:recordFieldIsNull ],
        [ sh:description "\"The unique ID that identifies a database record, supplied by the originating database engine.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:recordRowID ],
        [ sh:description "\"The table containing a specified database record.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:tableName ],
        [ sh:description "\"A field name of a database record value being identified.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:recordFieldName ],
        [ sh:description "\"The field value of a specified database record.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:recordFieldValue ],
        [ sh:description "\"The schema that contains the identified database record.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:tableSchema ] ;
    sh:targetClass observable:TableFieldFacet .

observable:Tablet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A tablet is a mobile computer that is primarily operated by touching the screen. (Devices categorized by their manufacturer as a Tablet\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:Tablet .

observable:TriggerType a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A triggerType is a grouping of characterizes unique to a set of criteria that, when met, starts the execution of a task within a Windows operating system. [based on https://docs.microsoft.com/en-us/windows/win32/taskschd/task-triggers]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the date/time that the trigger is deactivated.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:triggerEndTime ],
        [ sh:description "\"Specifies the type of the task trigger.\"" ;
            sh:in ( "TASK_TRIGGER_BOOT" "TASK_TRIGGER_EVENT" "TASK_TRIGGER_IDLE" "TASK_TRIGGER_LOGON" "TASK_TRIGGER_REGISTRATION" "TASK_TRIGGER_SESSION_STATE_CHANGE" "TASK_TRIGGER_TIME" ) ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:triggerType ],
        [ sh:description "\"Specifies the delay that takes place between when the task is registered and when the task is started.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:triggerDelay ],
        [ sh:description "\"Specifies the type of Terminal Server session change that would trigger a task launch. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381298(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:triggerSessionChangeType ],
        [ sh:description "\"Specifies the date/time that the trigger is activated.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:triggerBeginTime ],
        [ sh:description "\"Specifies whether the trigger isEnabled.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:isEnabled ],
        [ sh:description "\"The maximum amount of time that the task launched by the trigger is allowed to run. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa383868(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:triggerMaxRunTime ],
        [ sh:description "\"Specifies the frequency at which the trigger repeats.\"" ;
            sh:in ( "TASK_EVENT_TRIGGER_AT_LOGON" "TASK_EVENT_TRIGGER_AT_SYSTEMSTART" "TASK_EVENT_TRIGGER_ON_IDLE" "TASK_TIME_TRIGGER_DAILY" "TASK_TIME_TRIGGER_MONTHLYDATE" "TASK_TIME_TRIGGER_MONTHLYDOW" "TASK_TIME_TRIGGER_ONCE" "TASK_TIME_TRIGGER_WEEKLY" ) ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:triggerFrequency ] ;
    sh:targetClass observable:TriggerType .

observable:Tweet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A tweet is message submitted by a Twitter user account to the Twitter microblogging platform.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ] ;
    sh:targetClass observable:Tweet .

observable:TwitterProfileFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A twitter profile facet is a grouping of characteristics unique to an explicit digital representation of identity and characteristics of the owner of a single Twitter user account. [based on https://en.wikipedia.org/wiki/User_profile]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the number of times that this profile has favorited a tweet\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:favoritesCount ],
        [ sh:description "\"Specifies the number of tweets that this profile has issued\"" ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:statusesCount ],
        [ sh:class <types:Hash> ;
            sh:description "\"Specifies hashes of the background associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:profileBackgroundHash ],
        [ sh:description "\"Specifies the twitterHandle associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path observable:twitterHandle ],
        [ sh:description "\"Specifies whether the twitter profileIsProtected\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:profileIsProtected ],
        [ sh:class <types:Hash> ;
            sh:description "\"Specifies hashes of the profile image associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path observable:profileImageHash ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the network location of the banner associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:profileBannerLocation ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the network location of the profile image associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:profileImageLocation ],
        [ sh:description "\"Specifies whether the twitter profileIsVerified\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:profileIsVerified ],
        [ sh:description "\"Specifies the followersCount associated with the twitter profile\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:followersCount ],
        [ sh:description "\"Specifies the number of public lists that this profile is associated with.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:listedCount ],
        [ sh:description "\"Specifies the friendsCount associated with the twitter profile\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:friendsCount ],
        [ sh:description "\"Specifies the twitter id associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:twitterId ],
        [ sh:class <types:Hash> ;
            sh:description "\"Specifies hashes of the banner associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:profileBannerHash ],
        [ sh:description "\"Specifies the user-provided location string associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:order 15 ;
            sh:path observable:userLocationString ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the network location of the background associated with the profile\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:profileBackgroundLocation ] ;
    sh:targetClass observable:TwitterProfileFacet .

observable:UNIXAccount a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A UNIX account is an account on a UNIX operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:UNIXAccount .

observable:UNIXAccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A UNIX account facet is a grouping of characteristics unique to an account on a UNIX operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:shell ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:gid ] ;
    sh:targetClass observable:UNIXAccountFacet .

observable:UNIXFile a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A UNIX file is a file pertaining to the UNIX operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:UNIXFile .

observable:UNIXFilePermissionsFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A UNIX file permissions facet is a grouping of characteristics unique to the access rights (e.g., view, change, navigate, execute) of a file on a UNIX file system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:UNIXFilePermissionsFacet .

observable:UNIXProcess a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A UNIX process is an instance of a computer program executed on a UNIX operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:UNIXProcess .

observable:UNIXProcessFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A UNIX process facet is a grouping of characteristics unique to an instance of a computer program executed on a UNIX operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the real user ID, which represents the Unix user who created the process.\"" ;
            sh:order 1 ;
            sh:path observable:ruid ],
        [ sh:description "\"Specifies a listing of the current file descriptors used by the Unix process.\"" ;
            sh:order 0 ;
            sh:path observable:openFileDescriptor ] ;
    sh:targetClass observable:UNIXProcessFacet .

observable:UNIXVolumeFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A UNIX volume facet is a grouping of characteristics unique to a single accessible storage area (volume) with a single UNIX file system. [based on https://en.wikipedia.org/wiki/volume_(computing)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies any options used when mounting the volume.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:options ],
        [ sh:description "\"Specifies the mountPoint of the partition.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:mountPoint ] ;
    sh:targetClass observable:UNIXVolumeFacet .

observable:URL a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A URL is a uniform resource locator (URL) acting as a resolvable address to a particular WWW (World Wide Web) accessible resource.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:URL .

observable:URLFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A URL facet is a grouping of characteristics unique to a uniform resource locator (URL) acting as a resolvable address to a particular WWW (World Wide Web) accessible resource.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"Domain name or IP address where the resource is located.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:host ],
        [ sh:description "\"Username used to authenticate to this resource.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:userName ],
        [ sh:description "\"Port on which communication takes place.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:port ],
        [ sh:description "\"fragment pointing to a specific part in the resource.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:fragment ],
        [ sh:description "\"Specifies an authentication password.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:password ],
        [ sh:description "\"Query passed to the resource.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:query ],
        [ sh:description "\"Identifies the type of URL.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:scheme ],
        [ sh:description "\"The full stringValue of the URL.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:fullValue ],
        [ sh:description "\"Specifies the location of one object within another containing object.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:path ] ;
    sh:targetClass observable:URLFacet .

observable:URLHistory a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A URL history characterizes the stored URL history for a particular web browser\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:URLHistory .

observable:URLHistoryFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A URL history facet is a grouping of characteristics unique to the stored URL history for a particular web browser\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:URLHistoryEntry ;
            sh:description "\"Specifies a URL history record stored in the browser's history.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:urlHistoryEntry ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies information about the particular Web Browser.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:browserInformation ] ;
    sh:targetClass observable:URLHistoryFacet .

observable:URLVisit a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A URL visit characterizes the properties of a visit of a URL within a particular browser.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:URLVisit .

observable:URLVisitFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A URL visit facet is a grouping of characteristics unique to the properties of a visit of a URL within a particular browser.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies a URL associated with a particular observable object or facet.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:url ],
        [ sh:description "\"Specifies the date/time of a specific visit of a URL within a particular browser.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:visitTime ],
        [ sh:description "\"Specifies how a browser navigated to a particular URL on a particular visit.\"" ;
            sh:in ( "link" "typed" "auto_bookmark" "auto_subframe" "manual_subframe" "generated" "auto_toplevel" "form_submit" "reload" "keyword" "keyword_generated" ) ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:urlTransitionType ],
        [ sh:description "\"Specifies the duration of a specific visit of a URL within a particular browser.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:visitDuration ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies information about the particular Web Browser.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:browserInformation ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the URL visit origination point (i.e., URL) of the URL captured in the URL history entry, if applicable.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:fromURLVisit ] ;
    sh:targetClass observable:URLVisitFacet .

observable:UserAccount a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A user account is an account controlling a user's access to a network, system or platform.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ] ;
    sh:targetClass observable:UserAccount .

observable:UserAccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A user account facet is a grouping of characteristics unique to an account controlling a user's access to a network, system, or platform.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:isPrivileged ],
        [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:homeDirectory ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:canEscalatePrivs ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:isServiceAccount ] ;
    sh:targetClass observable:UserAccountFacet .

observable:UserSession a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A user session is a temporary and interactive information interchange between two or more communicating devices within the managed scope of a single user. [based on https://en.wikipedia.org/wiki/Session_(computer_science)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:UserSession .

observable:UserSessionFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A user session facet is a grouping of characteristics unique to a temporary and interactive information interchange between two or more communicating devices within the managed scope of a single user. [based on https://en.wikipedia.org/wiki/Session_(computer_science)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the date/time of the logout for the user session.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:logoutTime ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the effectiveUser details used in the user session.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:effectiveUser ],
        [ sh:description "\"Specifies the name of the effectiveGroup used in the user session.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:effectiveGroup ],
        [ sh:description "\"Specifies the effectiveGroupID of the group used in the user session.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:effectiveGroupID ],
        [ sh:description "\"Specifies the date/time of the login for the user session.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:loginTime ] ;
    sh:targetClass observable:UserSessionFacet .

observable:ValuesEnumeratedEffectFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A values enumerated effect facet is a grouping of characteristics unique to the effects of actions upon observable objects where a value of the observable object is enumerated. An example of this would be the values of a registry key.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The values that were enumerated as a result of the action on the object.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:values ] ;
    sh:targetClass observable:ValuesEnumeratedEffectFacet .

observable:Volume a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A volume is a single accessible storage area (volume) with a single file system. [based on https://en.wikipedia.org/wiki/volume_(computing)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:Volume .

observable:VolumeFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A volume facet is a grouping of characteristics unique to a single accessible storage area (volume) with a single file system. [based on https://en.wikipedia.org/wiki/volume_(computing)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The sectorSize of the volume in bytes.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:sectorSize ],
        [ sh:description "\"The unique identifier of the volume.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:volumeID ] ;
    sh:targetClass observable:VolumeFacet .

observable:WearableDevice a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A wearable device is an electronic device that is designed to be worn on a person's body\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:WearableDevice .

observable:WebPage a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A web page is a specific collection of information provided by a website and displayed to a user in a web browser. A website typically consists of many web pages linked together in a coherent fashion. [based on https://en.wikipedia.org/wiki/Web_page]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:WebPage .

observable:Whois a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"Whois is a response record conformant to the WHOIS protocol standard (RFC 3912). [based on https://en.wikipedia.org/wiki/WHOIS]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:Whois .

observable:WhoisContactFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Whois contact type is a grouping of characteristics unique to contact-related information present in a response record conformant to the WHOIS protocol standard (RFC 3912). [based on https://en.wikipedia.org/wiki/WHOIS]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies an ID for the contact.\"" ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path observable:contactID ],
        [ sh:class observable:ContactSIP ;
            sh:description "\"contactSIP specifies information characterizing details for contacting a contact entity by Session Initiation Protocol (SIP).\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path observable:contactSIP ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:displayName ],
        [ sh:description "\"contactGroup specifies the name/tag of a particular named/tagged grouping of contacts.\"" ;
            sh:maxCount 1 ;
            sh:order 21 ;
            sh:path observable:contactGroup ],
        [ sh:description "\"contactNote specifies a comment/note associated with a given contact.\"" ;
            sh:maxCount 1 ;
            sh:order 22 ;
            sh:path observable:contactNote ],
        [ sh:class observable:ContactProfile ;
            sh:description "\"contactProfile specifies information characterizing details for contacting a contact entity by online service.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path observable:contactProfile ],
        [ sh:description "" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <identity:birthdate> ],
        [ sh:description "\"The middleName of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 17 ;
            sh:path observable:middleName ],
        [ sh:description "\"Specifies what type of WHOIS contact this is.\"" ;
            sh:in ( "ADMIN" "BILLING" "TECHNICAL" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:whoisContactType ],
        [ sh:class observable:ContactAddress ;
            sh:description "\"contactAddress specifies information characterizing a geolocation address of a contact entity.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:contactAddress ],
        [ sh:description "\"Name prefix specifies an honorific prefix (coming ordinally before first/given name) for the name of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 19 ;
            sh:path observable:namePrefix ],
        [ sh:class observable:ContactURL ;
            sh:description "\"contactURL specifies information characterizing details for contacting a contact entity by Uniform Resource Locator (URL).\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path observable:contactURL ],
        [ sh:class observable:ContactEmail ;
            sh:description "\"contactEmail specifies information characterizing details for contacting a contact entity by email.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:contactEmail ],
        [ sh:description "\"Nickname specifies an alternate, unofficial and typically informal name for a person independent of their official name.\"" ;
            sh:maxCount 1 ;
            sh:order 23 ;
            sh:path observable:nickname ],
        [ sh:description "\"Last time contacted specifies the date and time that a particular contact was last contacted.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:lastTimeContacted ],
        [ sh:class observable:ContactPhone ;
            sh:description "\"contactPhone specifies information characterizing details for contacting a contact entity by telephone.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path observable:contactPhone ],
        [ sh:class observable:ContactAffiliation ;
            sh:description "\"contactAffiliation specifies information characterizing details of an organizational affiliation for a single contact entity.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:contactAffiliation ],
        [ sh:class observable:ContactMessaging ;
            sh:description "\"contactMessaging specifies information characterizing details for contacting a contact entity by digital messaging.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:contactMessaging ],
        [ sh:description "\"Number times contacted specifies the number of times a particular contact has been contacted.\"" ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:numberTimesContacted ],
        [ sh:description "\"Name suffix specifies an suffix (coming ordinally after last/family name) for the name of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 20 ;
            sh:path observable:nameSuffix ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Source application specifies the software application that a particular contact or contact list is associated with.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path observable:sourceApplication ],
        [ sh:description "\"The firstName of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 15 ;
            sh:path observable:firstName ],
        [ sh:description "\"The lastName of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 16 ;
            sh:path observable:lastName ],
        [ sh:description "\"Name phonetic specifies the phonetic pronunciation of the name of a person.\"" ;
            sh:maxCount 1 ;
            sh:order 18 ;
            sh:path observable:namePhonetic ] ;
    sh:targetClass observable:WhoisContactFacet .

observable:WhoisFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Whois facet is a grouping of characteristics unique to a response record conformant to the WHOIS protocol standard (RFC 3912). [based on https://en.wikipedia.org/wiki/WHOIS]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the date in which the registered domain was created.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:creationDate ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the corresponding domainName for a Whois entry.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:domainName ],
        [ sh:class observable:WhoisRegistrarInfoType ;
            sh:description "\"Specifies registrarInfo that would be returned from a registrar lookup.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path observable:registrarInfo ],
        [ sh:description "\"Specifies the name of the sponsoringRegistrar for a domain.\"" ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:sponsoringRegistrar ],
        [ sh:description "\"Specifies the date in which the registered domain information was last updated.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:updatedDate ],
        [ sh:description "\"Specifies the date and time that the Whois record was queried.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:lookupDate ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the corresponding ip address for a Whois entry. Usually corresponds to a nameServer lookup.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:ipAddress ],
        [ sh:description "\"Specifies any remarks associated with this Whois entry.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:remarks ],
        [ sh:description "\"Specifies a list of statuses for a given Whois entry.\"" ;
            sh:in ( "ADD_PERIOD" "AUTO_RENEW_PERIOD" "CLIENT_DELETE_PROHIBITED" "CLIENT_HOLD" "CLIENT_RENEW_PROHIBITED" "CLIENT_TRANSFER_PROHIBITED" "CLIENT_UPDATE_PROHIBITED" "DELETE_PROHIBITED" "HOLD" "INACTIVE" "OK" "PENDING_DELETE_RESTORABLE" "PENDING_DELETE_SCHEDULED_FOR_RELEASE" "PENDING_RESTORE" "RENEW_PERIOD" "RENEW_PROHIBITED" "TRANSFER_PERIOD" "TRANSFER_PROHIBITED" "UPDATE_PROHIBITED" ) ;
            sh:maxCount 1 ;
            sh:order 15 ;
            sh:path observable:status ],
        [ sh:description "\"specifies the name of the Regional Internet Registry (RIR) which allocated the IP address contained in a WHOIS entry.\"" ;
            sh:maxCount 1 ;
            sh:order 16 ;
            sh:path observable:regionalInternetRegistry ],
        [ sh:description "\"Specifies the DNSSEC property associated with a Whois entry. Acceptable values are: 'Signed' or 'Unsigned'.\"" ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:dnssec ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies a list of nameServer entries for a Whois entry.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:nameServer ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies contact info for the registrant of a domain within a WHOIS entity.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:registrantContactInfo ],
        [ sh:description "\"Specifies the registrantIDs associated with a domain lookup.\"" ;
            sh:order 13 ;
            sh:path observable:registrantIDs ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the corresponding serverName for a Whois entry. This usually corresponds to a nameServer lookup.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:serverName ],
        [ sh:description "\"Specifies the domain id for the domain associated with a Whois entry.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:domainID ],
        [ sh:description "\"Specifies the date in which the registered domain will expire.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:expirationDate ] ;
    sh:targetClass observable:WhoisFacet .

observable:WifiAddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Wi-Fi address is a media access control (MAC) standards-conformant identifier assigned to a device networkInterface to enable routing and management of IEEE 802.11 standards-conformant communications to and from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:WifiAddress .

observable:WifiAddressFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Wi-Fi address facet is a grouping of characteristics unique to a media access control (MAC) standards conformant identifier assigned to a device networkInterface to enable routing and management of IEEE 802.11 standards-conformant communications to and from that device.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:displayName ],
        [ sh:description "\"The value of an address.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:addressValue ] ;
    sh:targetClass observable:WifiAddressFacet .

observable:Wiki a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A wiki is an online hypertext publication collaboratively edited and managed by its own audience directly using a web browser. A typical wiki contains multiple pages/articles for the subjects or scope of the project and could be either open to the public or limited to use within an organization for maintaining its internal knowledge base. [based on https://en.wikipedia.org/wiki/Wiki]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:Wiki .

observable:WikiArticle a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A wiki article is one or more pages in a wiki focused on characterizing a particular topic.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:WikiArticle .

observable:WindowsAccount a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows account is a user account on a Windows operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:WindowsAccount .

observable:WindowsAccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows account facet is a grouping of characteristics unique to a user account on a Windows operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:order 0 ;
            sh:path observable:groups ] ;
    sh:targetClass observable:WindowsAccountFacet .

observable:WindowsActiveDirectoryAccount a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows Active Directory account is an account managed by directory-based identity-related services of a Windows operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:WindowsActiveDirectoryAccount .

observable:WindowsActiveDirectoryAccountFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows Active Directory account facet is a grouping of characteristics unique to an account managed by directory-based identity-related services of a Windows operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:objectGUID ],
        [ sh:description "" ;
            sh:order 1 ;
            sh:path observable:activeDirectoryGroups ] ;
    sh:targetClass observable:WindowsActiveDirectoryAccountFacet .

observable:WindowsComputerSpecification a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows computer specification is the hardware ans software of a programmable electronic device that can store, retrieve, and process data running a Microsoft Windows operating system. [based on merriam-webster.com/dictionary/computer]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:WindowsComputerSpecification .

observable:WindowsComputerSpecificationFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows computer specification facet is a grouping of characteristics unique to the hardware and software of a programmable electronic device that can store, retrieve, and process data running a Microsoft Windows operating system. [based on merriam-webster.com/dictionary/computer]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"The Windows_Directory field specifies the fully-qualified path to the Windows install directory.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:windowsDirectory ],
        [ sh:class <identity:Identity> ;
            sh:description "\"The organization that this copy of Windows is registered to.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:registeredOrganization ],
        [ sh:class <identity:Identity> ;
            sh:description "\"The person or organization that is the registeredOwner of this copy of Windows.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:registeredOwner ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The Windows_Temp_Directory field specifies the fully-qualified path to the Windows temporary files directory.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path observable:windowsTempDirectory ],
        [ sh:description "\"The domain(s) that the system belongs to.\"" ;
            sh:order 12 ;
            sh:path observable:domain ],
        [ sh:description "\"The Microsoft ProductName of the current installation of Windows. This is typically found in HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion!ProductName.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:msProductName ],
        [ sh:description "\"Specifies the date on which the operating system (OS) was installed.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:osInstallDate ],
        [ sh:description "\"The Microsoft Product ID. See also: http://support.microsoft.com/gp/pidwin.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:msProductID ],
        [ sh:description "\"Specifies the date on which the device was last shutdown.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:lastShutdownDate ],
        [ sh:class observable:GlobalFlagType ;
            sh:description "\"A list of global flags. See also: http://msdn.microsoft.com/en-us/library/windows/hardware/ff549557(v=vs.85).aspx.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:globalFlagList ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The Windows_System_Directory field specifies the fully-qualified path to the Windows system directory.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:windowsSystemDirectory ],
        [ sh:description "\"Specifies the date on which the operating system (OS) was last upgraded.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:osLastUpgradeDate ],
        [ sh:description "\"Specifies the NetBIOS (network  Basic Input/Output System) name of the Windows system. This is not the same as the host name.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:netBIOSName ] ;
    sh:targetClass observable:WindowsComputerSpecificationFacet .

observable:WindowsCriticalSection a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows critical section is a Windows object that provides synchronization similar to that provided by a mutex object, except that a critical section can be used only by the threads of a single process. Critical section objects cannot be shared across processes. Event, mutex, and semaphore objects can also be used in a single-process application, but critical section objects provide a slightly faster, more efficient mechanism for mutual-exclusion synchronization (a processor-specific test and set instruction). Like a mutex object, a critical section object can be owned by only one thread at a time, which makes it useful for protecting a shared resource from simultaneous access. Unlike a mutex object, there is no way to tell whether a critical section has been abandoned. [based on https://docs.microsoft.com/en-us/windows/win32/sync/critical-section-objects]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:WindowsCriticalSection .

observable:WindowsEvent a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows event is a notification record of an occurance of interest (system, security, application, etc.) on a Windows operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass observable:WindowsEvent .

observable:WindowsFileMapping a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A windows file mapping is the association of a file's contents with a portion of the virtual address space of a process within a Windows operating system. The system creates a file mapping object (also known as a section object) to maintain this association. A file view is the portion of virtual address space that a process uses to access the file's contents. file mapping allows the process to use both random input and output (I/O) and sequential I/O. It also allows the process to work efficiently with a large data file, such as a database, without having to map the whole file into memory. Multiple processes can also use memory-mapped files to share data. processes read from and write to the file view using pointers, just as they would with dynamically allocated memory. The use of file mapping improves efficiency because the file resides on disk, but the file view resides in memory.[based on https://docs.microsoft.com/en-us/windows/win32/memory/file-mapping]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:WindowsFileMapping .

observable:WindowsHandle a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows handle is an abstract reference to a resource within the Windows operating system, such as a window, memory, an open file or a pipe. It is the mechanism by which applications interact with such resources in the Windows operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:WindowsHandle .

observable:WindowsHook a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows hook is a mechanism by which an application can intercept events, such as messages, mouse actions, and keystrokes within the Windows operating system. A function that intercepts a particular type of event is known as a hook procedure. A hook procedure can act on each event it receives, and then modify or discard the event. [based on https://docs.microsoft.com/en-us/windows/win32/winmsg/about-hooks]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ] ;
    sh:targetClass observable:WindowsHook .

observable:WindowsMailSlot a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows mailslot is is a pseudofile that resides in memory, and may be accessed using standard file functions. The data in a mailslot message can be in any form, but cannot be larger than 424 bytes when sent between computers. Unlike disk files, mailslots are temporary. When all handles to a mailslot are closed, the mailslot and all the data it contains are deleted. [based on https://docs.microsoft.com/en-us/windows/win32/ipc/about-mailslots]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:WindowsMailSlot .

observable:WindowsNetworkShare a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows network share is a Windows computer resource made available from one host to other hosts on a computer network. It is a device or piece of information on a computer that can be remotely accessed from another computer transparently as if it were a resource in the local machine. network  sharing is made possible by inter-process communication over the network. [based on https://en.wikipedia.org/wiki/Shared_resource]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ] ;
    sh:targetClass observable:WindowsNetworkShare .

observable:WindowsPEBinaryFile a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows PE binary file is a Windows portable executable (PE) file.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ] ;
    sh:targetClass observable:WindowsPEBinaryFile .

observable:WindowsPEBinaryFileFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows PE binary file facet is a grouping of characteristics unique to a Windows portable executable (PE) file.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the time when the PE binary was created.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:timeDateStamp ],
        [ sh:description "\"Specifies the type of the PE binary.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:peType ],
        [ sh:description "\"Specifies the flags that indicate the fileâ€™s characteristics.\"" ;
            sh:order 11 ;
            sh:path observable:characteristics ],
        [ sh:description "\"Specifies the type of target machine.\"" ;
            sh:order 10 ;
            sh:path observable:machine ],
        [ sh:description "\"Specifies the size of the optionalHeader of the PE binary.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:sizeOfOptionalHeader ],
        [ sh:class <types:Hash> ;
            sh:description "\"Specifies any hashes that were computed for the file header.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:fileHeaderHashes ],
        [ sh:description "\"Specifies the file offset of the COFF symbol table.\"" ;
            sh:order 4 ;
            sh:path observable:pointerToSymbolTable ],
        [ sh:description "\"Specifies the numberOfSections in the PE binary, as a non-negative integer.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:numberOfSections ],
        [ sh:class observable:WindowsPEOptionalHeader ;
            sh:description "\"Specifies the PE optional header of the PE binary.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:optionalHeader ],
        [ sh:description "\"Specifies the number of entries in the symbol table of the PE binary, as a non-negative integer.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:numberOfSymbols ],
        [ sh:description "\"Specifies the special import hash, or â€˜imphashâ€™, calculated for the PE Binary based on its imported libraries and functions.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:impHash ],
        [ sh:class observable:WindowsPESection ;
            sh:description "\"Specifies metadata about the sections in the PE file.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:sections ] ;
    sh:targetClass observable:WindowsPEBinaryFileFacet .

observable:WindowsPEBinaryType a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:WindowsPEBinaryType .

observable:WindowsPEFileHheader a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows PE file header is a grouping of characteristics unique to the 'header' of a Windows PE (Portable Executable) file, consisting of a collection of metadata about the overall nature and structure of the file.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the time when the PE binary was created.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:timeDateStamp ] ;
    sh:targetClass observable:WindowsPEFileHheader .

observable:WindowsPrefetch a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"The Windows prefetch contains entries in a Windows prefetch file (used to speed up application startup starting with Windows XP).\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ] ;
    sh:targetClass observable:WindowsPrefetch .

observable:WindowsPrefetchFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows prefetch facet is a grouping of characteristics unique to entries in the Windows prefetch file (used to speed up application startup starting with Windows XP).\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Timestamp of when the prefetch application was lastRun.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:lastRun ],
        [ sh:class observable:ObservableObject ;
            sh:description "\" files (e.g., DLLs and other support files) used by the application during startup.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:accessedFile ],
        [ sh:description "\"An eight character hash of the location from which the application was run.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:prefetchHash ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Directories accessed by the prefetch application during startup.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:accessedDirectory ],
        [ sh:description "\"Timestamp of when the prefetch application was firstRun.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:firstRun ],
        [ sh:description "\"Name of the executable of the prefetch file.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:applicationFileName ],
        [ sh:description "\"The number of times the prefetch application has executed.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:timesExecuted ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The volume from which the prefetch application was run. If the applicatin was run from multiple volumes, there will be a separate prefetch file for each.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:volume ] ;
    sh:targetClass observable:WindowsPrefetchFacet .

observable:WindowsProcess a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows process is a program running on a Windows operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass observable:WindowsProcess .

observable:WindowsProcessFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows process facet is a grouping of characteristics unique to a program running on a Windows operating system.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:ownerSID ],
        [ sh:description "\"The priority of the email.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:priority ],
        [ sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:windowTitle ],
        [ sh:class <types:Dictionary> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:startupInfo ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:depEnabled ],
        [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:aslrEnabled ] ;
    sh:targetClass observable:WindowsProcessFacet .

observable:WindowsRegistryHive a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"The Windows registry hive is a particular logical group of keys, subkeys, and values in a Windows registry (a hierarchical database that stores low-level settings for the Microsoft Windows operating sytem and for applications that opt to use the registry). [based on https://en.wikipedia.org/wiki/Windows_Registry]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:WindowsRegistryHive .

observable:WindowsRegistryHiveFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows registry hive facet is a grouping of characteristics unique to a particular logical group of keys, subkeys, and values in a Windows registry (a hierarchical database that stores low-level settings for the Microsoft Windows operating sytem and for applications that opt to use the registry). [based on https://en.wikipedia.org/wiki/Windows_Registry]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The type of a registry hive.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hiveType ] ;
    sh:targetClass observable:WindowsRegistryHiveFacet .

observable:WindowsRegistryKey a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows registry key is a particular key within a Windows registry (a hierarchical database that stores low-level settings for the Microsoft Windows operating sytem and for applications that opt to use the registry). [based on https://en.wikipedia.org/wiki/Windows_Registry]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:WindowsRegistryKey .

observable:WindowsRegistrykeyFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows registry key facet is a grouping of characteristics unique to a particular key within a Windows registry (A hierarchical database that stores low-level settings for the Microsoft Windows operating sytem and for applications that opt to use the registry). [based on https://en.wikipedia.org/wiki/Windows_Registry]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:numberOfSubkeys ],
        [ sh:class observable:WindowsRegistryValue ;
            sh:description "\"The values that were enumerated as a result of the action on the object.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:registryValues ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <core:modifiedTime> ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the name of the creator of the registry key.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:creator ],
        [ sh:description "\"A key property of a single dictionary entry.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path <types:key> ] ;
    sh:targetClass observable:WindowsRegistrykeyFacet .

observable:WindowsService a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows service is a specific Windows service (a computer program that operates in the background of a Windows operating system, similar to the way a UNIX daemon runs on UNIX ). [based on https://en.wikipedia.org/wiki/Windows_service]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:WindowsService .

observable:WindowsServiceFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows service facet is a grouping of characteristics unique to a specific Windows service (a computer program that operates in the background of a Windows operating system, similar to the way a UNIX daemon runs on UNIX ). [based on https://en.wikipedia.org/wiki/Windows_service]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:startCommandLine ],
        [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:servicStatus ],
        [ sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:startType ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:serviceName ],
        [ sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:serviceType ],
        [ sh:description "\"Display name specifies the name to display for some entity within a user interface.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:displayName ],
        [ sh:order 7 ;
            sh:path observable:descriptions ],
        [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:groupName ] ;
    sh:targetClass observable:WindowsServiceFacet .

observable:WindowsServiceStartType a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:WindowsServiceStartType .

observable:WindowsServiceStatus a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:WindowsServiceStatus .

observable:WindowsServiceType a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass observable:WindowsServiceType .

observable:WindowsSystemRestore a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows system restore is a capture of a Windows computer's state (including system files, installed applications, Windows Registry, and system settings) at a particular point in time such that the computer can be reverted to that state in the event of system malfunctions or other problems. [based on https://en.wikipedia.org/wiki/System_Restore]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:WindowsSystemRestore .

observable:WindowsTask a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows task is a process that is scheduled to execute on a Windows operating system by the Windows Task Scheduler. [based on http://msdn.microsoft.com/en-us/library/windows/desktop/aa381311(v=vs.85).aspx]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass observable:WindowsTask .

observable:WindowsTaskFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows Task facet is a grouping of characteristics unique to a Windows Task (a process that is scheduled to execute on a Windows operating system by the Windows Task Scheduler). [based on http://msdn.microsoft.com/en-us/library/windows/desktop/aa381311(v=vs.85).aspx]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies application defined data associated with the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381271(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:workItemData ],
        [ sh:description "\"The date and time at which the observable object being characterized was created. This time pertains to an intrinsic characteristic of the observable object, and would be consistent across independent characterizations or observations of the observable object.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:observableCreatedTime ],
        [ sh:description "\"Specifies the permission level of the account that the task will be run at.\"" ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:accountRunLevel ],
        [ sh:class observable:TaskActionType ;
            sh:description "\"Specifies a list of actions to be performed by the scheduled task.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:actionList ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the account referenced in an event log entry or used to run the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381228(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:account ],
        [ sh:description "\"Specifies the most recent run date/time of this scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381254(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:mostRecentRunTime ],
        [ sh:description "\"Specifies a list of statuses for a given Whois entry.\"" ;
            sh:in ( "SCHED_E_ACCOUNT_DBASE_CORRUPT" "SCHED_E_ACCOUNT_INFORMATION_NOT_SET" "SCHED_E_ACCOUNT_NAME_NOT_FOUND" "SCHED_E_CANNOT_OPEN_TASK" "SCHED_E_INVALID_TASK" "SCHED_E_NO_SECURITY_SERVICES" "SCHED_E_SERVICE_NOT_INSTALLED" "SCHED_E_SERVICE_NOT_RUNNING" "SCHED_E_TASK_NOT_READY" "SCHED_E_TASK_NOT_RUNNING" "SCHED_E_TRIGGER_NOT_FOUND" "SCHED_E_UNKNOWN_OBJECT_VERSION" "SCHED_E_UNSUPPORTED_ACCOUNT_OPTION" "SCHED_S_EVENT_TRIGGER" "SCHED_S_TASK_DISABLED" "SCHED_S_TASK_HAS_NOT_RUN" "SCHED_S_TASK_NOT_SCHEDULED" "SCHED_S_TASK_NO_MORE_RUNS" "SCHED_S_TASK_NO_VALID_TRIGGERS" "SCHED_S_TASK_READY" "SCHED_S_TASK_RUNNING" "SCHED_S_TASK_TERMINATED" "TASK_STATE_QUEUED" "TASK_STATE_UNKNOWN" ) ;
            sh:maxCount 1 ;
            sh:order 19 ;
            sh:path observable:status ],
        [ sh:description "\"Specifies the maximum run time of the scheduled task before terminating, in milliseconds. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381874(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:maxRunTime ],
        [ sh:description "\"Specifies any flags that modify the behavior of the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381248(v=vs.85).aspx.\"" ;
            sh:in ( "TASK_FLAG_DELETE_WHEN_DONE" "TASK_FLAG_DISABLED" "TASK_FLAG_DONT_START_IF_ON_BATTERIES" "TASK_FLAG_HIDDEN" "TASK_FLAG_INTERACTIVE" "TASK_FLAG_KILL_IF_GOING_ON_BATTERIES" "TASK_FLAG_KILL_ON_IDLE_END" "TASK_FLAG_RESTART_ON_IDLE_RESUME" "TASK_FLAG_RUN_IF_CONNECTED_TO_INTERNET" "TASK_FLAG_RUN_ONLY_IF_LOGGED_ON" "TASK_FLAG_START_ONLY_IF_IDLE" "TASK_FLAG_SYSTEM_REQUIRED" "TASK_FLAG_ZERO" ) ;
            sh:maxCount 1 ;
            sh:order 17 ;
            sh:path observable:flags ],
        [ sh:description "\"Specifies the command line parameters used to launch the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381875(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:parameters ],
        [ sh:description "\"Specifies the last exitCode of the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381245(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:exitCode ],
        [ sh:description "\"The priority of the email.\"" ;
            sh:in ( "ABOVE_NORMAL_PRIORITY_CLASS" "BELOW_NORMAL_PRIORITY_CLASS" "HIGH_PRIORITY_CLASS" "IDLE_PRIORITY_CLASS" "NORMAL_PRIORITY_CLASS" "REALTIME_PRIORITY_CLASS" ) ;
            sh:maxCount 1 ;
            sh:order 18 ;
            sh:path observable:priority ],
        [ sh:description "\"Specifies the imageName for the task.\"" ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path observable:imageName ],
        [ sh:description "\"Specifies the next run date/time of the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381257(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:nextRunTime ],
        [ sh:description "\"Specifies the security logon method required to run the tasks associated with the account. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa383013(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:accountLogonType ],
        [ sh:class observable:ObservableObject ;
            sh:description "'Specifies the workingDirectory for the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381878(v=vs.85).aspx'" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:workingDirectory ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"The application associated with this object.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:application ],
        [ sh:description "\"Specifies the name of the creator of the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381235(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 16 ;
            sh:path observable:taskCreator ],
        [ sh:description "\"Specifies a set of triggers used by the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa383264(v=vs.85).aspx.\"" ;
            sh:order 5 ;
            sh:path observable:triggerList ],
        [ sh:description "\"Specifies a comment for the scheduled task. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381232(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 15 ;
            sh:path observable:taskComment ] ;
    sh:targetClass observable:WindowsTaskFacet .

observable:WindowsThread a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows thread is a single thread of execution within a Windows process.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:WindowsThread .

observable:WindowsThreadFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows thread facet is a grouping os characteristics unique to a single thread of execution within a Windows process.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:order 2 ;
            sh:path observable:startAddress ],
        [ sh:description "A description of particular contextual affinity." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <core:context> ],
        [ sh:order 1 ;
            sh:path observable:parameterAddress ],
        [ sh:description "\"The priority of the email.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:priority ],
        [ sh:order 4 ;
            sh:path observable:stackSize ],
        [ sh:order 5 ;
            sh:path observable:threadID ],
        [ sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:securityAttributes ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:creationTime ],
        [ sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:runningStatus ],
        [ sh:order 9 ;
            sh:path observable:creationFlags ] ;
    sh:targetClass observable:WindowsThreadFacet .

observable:WindowsVolumeFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows volume facet is a grouping of characteristics unique to a single accessible storage area (volume) with a single windows file system. [based on https://en.wikipedia.org/wiki/volume_(computing)]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the driveType of a windows volume.\"" ;
            sh:in ( "DRIVE_CDROM" "DRIVE_FIXED" "DRIVE_NO_ROOT_DIR" "DRIVE_RAMDISK" "DRIVE_REMOTE" "DRIVE_REMOVABLE" "DRIVE_UNKNOWN" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:driveType ],
        [ sh:description "\"Specifies the driveLetter of a windows volume.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:driveLetter ],
        [ sh:description "\"Specifies the attributes of a windows volume.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:windowsVolumeAttributes ] ;
    sh:targetClass observable:WindowsVolumeFacet .

observable:WindowsWaitableTime a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows waitable timer is a synchronization object within the Windows operating system whose state is set to signaled when a specified due time arrives. There are two types of waitable timers that can be created: manual-reset and synchronization. A timer of either type can also be a periodic timer. [based on https://docs.microsoft.com/en-us/windows/win32/sync/waitable-timer-objects]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:WindowsWaitableTime .

observable:WirelessNetworkConnection a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A wireless network connection is a connection (completed or attempted) across an IEEE 802.11 standards-confromant digital network (a group of two or more computer systems linked together). [based on https://www.webopedia.com/TERM/N/network.html]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass observable:WirelessNetworkConnection .

observable:WirelessNetworkConnectionFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A wireless network connection facet is a grouping of characteristics unique to a connection (completed or attempted) across an IEEE 802.11 standards-conformant digital network (a group of two or more computer systems linked together). [based on https://www.webopedia.com/TERM/N/network.html]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the security mode of a wireless network (None, WEP, WPA, etc).\"" ;
            sh:in ( "None" "WEP" "WPA" "WPA2-PSK" "WPA2-Enterprise" "WPA3-PSK" "WPA3-Enterprise" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:wirelessNetworkSecurityMode ],
        [ sh:description "\"Specifies an authentication password.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:password ],
        [ sh:description """"The baseStation."
  close_mappings:
- wikidata:Q1332343  # cell site""" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:baseStation ],
        [ sh:description "\"network  identifier.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:ssid ] ;
    sh:targetClass observable:WirelessNetworkConnectionFacet .

observable:WriteBlocker a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A write blocker is a device that allows read-only access to storage mediums in order to preserve the integrity of the data being analyzed. Examples include Tableau, Cellibrite, Talon, etc\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass observable:WriteBlocker .

observable:X509Certificate a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A X.509 certificate is a public key digital identity certificate conformant to the X.509 PKI (Public Key Infrastructure) standard.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ] ;
    sh:targetClass observable:X509Certificate .

observable:X509CertificateFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A X.509 certificate facet is a grouping of characteristics unique to a public key digital identity certificate conformant to the X.509 PKI (Public Key Infrastructure) standard.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:validityNotBefore ],
        [ sh:description "\"The subject of the email.\"" ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:subject ],
        [ sh:maxCount 1 ;
            sh:order 13 ;
            sh:path observable:subjectPublicKeyAlgorithm ],
        [ sh:class <types:Hash> ;
            sh:description "\"A hash calculated on the certificate subject name.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:subjectHash ],
        [ sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:isSelfSigned ],
        [ sh:maxCount 1 ;
            sh:order 15 ;
            sh:path observable:version ],
        [ sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:subjectPublicKeyModulus ],
        [ sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:serialNumber ],
        [ sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:signatureAlgorithm ],
        [ sh:description "\"A\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:signature ],
        [ sh:class <types:Hash> ;
            sh:description "\"A hash calculated on the certificate Issuer name.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:issuerHash ],
        [ sh:class observable:X509V3ExtensionsFacet ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:x509v3extensions ],
        [ sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:issuer ],
        [ sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:subjectPublicKeyExponent ],
        [ sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:validityNotAfter ],
        [ sh:class <types:Hash> ;
            sh:description "\"A hash calculated on the entire certificate including signature.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:thumbprintHash ] ;
    sh:targetClass observable:X509CertificateFacet .

observable:X509V3Certificate a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An X.509 v3 certificate is a public key digital identity certificate conformant to the X.509 v3 PKI (Public Key Infrastructure) standard.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:X509V3Certificate .

<identity:AddressFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An Address Facet is a grouping of characteristics unique to an administrative identifier for a geolocation associated with a specific identity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <location:Location> ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <identity:address> ] ;
    sh:targetClass <identity:AddressFacet> .

<identity:AffiliationFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An affiliation is a grouping of characteristics unique to the established affiliations of an entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:AffiliationFacet> .

<identity:BirthInformationFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Birth information is a grouping of characteristics unique to information pertaining to the birth of an entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <identity:birthdate> ] ;
    sh:targetClass <identity:BirthInformationFacet> .

<identity:CountryOfResidenceFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Country of residence is a grouping of characteristics unique to information related to the country, or countries, where an entity resides." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:CountryOfResidenceFacet> .

<identity:EventsFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Events is a grouping of characteristics unique to information related to specific relevant things that happen in the lifetime of an entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:EventsFacet> .

<identity:IdentifierFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Identifier is a grouping of characteristics unique to information that uniquely and specifically identities an entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:IdentifierFacet> .

<identity:IdentityFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An IdentityFacet is a grouping of characteristics unique to a particular aspect of an identity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:IdentityFacet> .

<identity:LanguagesFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Languages is a grouping of characteristics unique to specific syntactically and grammatically standardized forms of communication (human or computer) in which an entity has proficiency (comprehends, speaks, reads, or writes)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:LanguagesFacet> .

<identity:NationalityFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Nationality is a grouping of characteristics unique to the condition of an entity belonging to a particular nation." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:NationalityFacet> .

<identity:OccupationFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Occupation is a grouping of characteristics unique to the job or profession of an entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:OccupationFacet> .

<identity:OrganizationDetailsFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Organization details is a grouping of characteristics unique to an identity representing an administrative and functional structure." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:OrganizationDetailsFacet> .

<identity:Person> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A person is a grouping of identifying characteristics unique to a human being regarded as an individual. [based on https://www.lexico.com/en/definition/person]" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ] ;
    sh:targetClass <identity:Person> .

<identity:PersonalDetailsFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Personal details is a grouping of characteristics unique to an identity representing an individual person." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:PersonalDetailsFacet> .

<identity:PhysicalInfoFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Physical info is a grouping of characteristics unique to the outwardly observable nature of an individual person." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:PhysicalInfoFacet> .

<identity:QualificationFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Qualification is a grouping of characteristics unique to particular skills, capabilities or their related achievements (educational, professional, etc.) of an entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:QualificationFacet> .

<identity:RelatedIdentityFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "<Needs fleshed out from CIQ>" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:RelatedIdentityFacet> .

<identity:SimpleNameFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A simple name facet is a grouping of characteristics unique to the personal name (e.g., Dr. John Smith Jr.) held by an identity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "" ;
            sh:order 3 ;
            sh:path <identity:honorificSuffix> ],
        [ sh:description "" ;
            sh:order 1 ;
            sh:path <identity:givenName> ],
        [ sh:description "" ;
            sh:order 2 ;
            sh:path <identity:honorificPrefix> ],
        [ sh:description "" ;
            sh:order 0 ;
            sh:path <identity:familyName> ] ;
    sh:targetClass <identity:SimpleNameFacet> .

<identity:VisaFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Visa is a grouping of characteristics unique to information related to a person's ability to enter, leave, or stay for a specified period of time in a country." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <identity:VisaFacet> .

<location:GPSCoordinatesFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A GPS coordinates facet is a grouping of characteristics unique to the expression of quantified dilution of precision (DOP) for an asserted set of geolocation coordinates typically associated with satellite navigation such as the Global Positioning System (GPS)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The horizontal dilution of precision of the GPS location." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <location:hdop> ],
        [ sh:description "The temporal dilution of precision of the GPS location." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <location:tdop> ],
        [ sh:description "The positional (3D) dilution of precision of the GPS location." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <location:pdop> ],
        [ sh:description "The vertical dilution of precision of the GPS location." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <location:vdop> ] ;
    sh:targetClass <location:GPSCoordinatesFacet> .

<location:LatLongCoordinatesFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A lat long coordinates facet is a grouping of characteristics unique to the expression of a geolocation as the intersection of specific latitude, longitude, and altitude values." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The longitude coordinate of a geolocation." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <location:longitude> ],
        [ sh:description "The latitude coordinate of a geolocation." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <location:latitude> ],
        [ sh:description "The altitude coordinate of a geolocation." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <location:altitude> ] ;
    sh:targetClass <location:LatLongCoordinatesFacet> .

<location:SimpleAddressFacet> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A simple address facet is a grouping of characteristics unique to a geolocation expressed as an administrative address." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of the geolocation country." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <location:country> ],
        [ sh:description "The name of the street." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <location:street> ],
        [ sh:description "The name of the geolocation region (e.g., state)." ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path <location:region> ],
        [ sh:description "The type of the address, for instance home or work." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <location:addressType> ],
        [ sh:description "The zip-code." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <location:postalCode> ],
        [ sh:description "The name of the geolocation locality (e.g., city)." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <location:locality> ] ;
    sh:targetClass <location:SimpleAddressFacet> .

<pattern:LogicalPattern> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A logical pattern is a grouping of characteristics unique to an informational pattern expressed via a structured pattern expression following the rules of logic." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 2 ;
            sh:path <dcterms:description> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 4 ;
            sh:path <core:hasFacet> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 5 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 3 ;
            sh:path <core:externalReference> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 10 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "An explicit logical pattern expression." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <pattern:patternExpression> ] ;
    sh:targetClass <pattern:LogicalPattern> .

<pattern:Pattern> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A pattern is a combination of properties, acts, tendencies, etc., forming a consistent or characteristic arrangement." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ] ;
    sh:targetClass <pattern:Pattern> .

<pattern:PatternExpression> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A pattern expression is a grouping of characteristics unique to an explicit logical expression defining a pattern (e.g., regular expression, SQL Select expression, etc.)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <pattern:PatternExpression> .

<types:ControlledDictionaryEntry> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A controlled dictionary entry is a single (term/key, value) pair where the term/key is constrained to an explicitly defined set of values.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"A key property of a single dictionary entry.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 0 ;
            sh:path <types:key> ],
        [ sh:description "A string value." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 1 ;
            sh:path <core:value> ] ;
    sh:targetClass <types:ControlledDictionaryEntry> .

<action:ArrayOfAction> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An array of action is an ordered list of references to things that may be done or performed.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <action:Action> ;
            sh:description "\"A characterization of a single action.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <action:action> ] ;
    sh:targetClass <action:ArrayOfAction> .

<configuration:Configuration> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A configuration is a grouping of characteristics unique to a set of parameters or initial settings for the use of a tool, application, software, or other cyber object." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <configuration:Dependency> ;
            sh:description "The relevant configuration dependencies for a tool, application, software, or other cyber object." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <configuration:dependencies> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Description of the various relevant usage context assumptions for a tool or other software ." ;
            sh:order 2 ;
            sh:path <configuration:usageContextAssumptions> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:class <configuration:ConfigurationEntry> ;
            sh:description "A single configuration setting entry item for a tool or other software." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <configuration:configurationEntry> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass <configuration:Configuration> .

<configuration:ConfigurationEntry> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A configuration entry is a grouping of characteristics unique to a particular parameter or initial setting for the use of a tool, application, software, or other cyber object." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The value of a configuration setting entry instance." ;
            sh:order 4 ;
            sh:path <configuration:itemValue> ],
        [ sh:description "A description of a configuration setting entry item." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <configuration:itemDescription> ],
        [ sh:class <core:UcoObject> ;
            sh:description "The structured value of a configuration setting entry instance." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <configuration:itemObject> ],
        [ sh:description "The type of a configuration setting entry item." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <configuration:itemType> ],
        [ sh:description "The name of a configuration setting entry item." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <configuration:itemName> ] ;
    sh:targetClass <configuration:ConfigurationEntry> .

<configuration:Dependency> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A dependency is a grouping of characteristics unique to something that a tool or other software relies on to function as intended." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The type of a tool or other software dependency." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <configuration:dependencyType> ],
        [ sh:description "A description of a tool or other software dependency." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <configuration:dependencyDescription> ] ;
    sh:targetClass <configuration:Dependency> .

observable:AlternateDataStream a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An alternate data stream is data content stored within an NTFS file that is independent of the standard content stream of the file and isHidden from access by default NTFS file viewing mechanisms.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ] ;
    sh:targetClass observable:AlternateDataStream .

observable:ApplicationVersion a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An application version is a grouping of characteristics unique to a particular software program version.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the date the operating system or application was uninstalled.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:uninstallDate ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:version ],
        [ sh:description "\"Specifies the date the operating sytem or application was installed.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:installDate ] ;
    sh:targetClass observable:ApplicationVersion .

observable:CellSite a sh:NodeShape ;
    sh:closed true ;
    sh:description "" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ] ;
    sh:targetClass observable:CellSite .

observable:ExtractedString a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An extracted string is a grouping of characteristics unique to a series of characters pulled from an observable object.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description """"Specifies the language the string is written in, e.g. English.
    For consistency, it is strongly recommended to use the ISO 639-2 language code, if available. Please see http://www.loc.gov/standards/iso639-2/php/code_list.php for a list of ISO 639-2 codes.\"""" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:language ],
        [ sh:description "\"Specifies the raw, byte-string representation of the extracted string.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:byteStringValue ],
        [ sh:description "\"Specifies the English translation of the string, if it is not written in English.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:englishTranslation ],
        [ sh:description "\"Specifies the length, in characters, of the extracted string.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:length ],
        [ sh:description "\"Specifies the actual value of the extracted string.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:stringValue ],
        [ sh:description "\"The encodingMethod used for the extracted string.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:encoding ] ;
    sh:targetClass observable:ExtractedString .

observable:GlobalFlagType a sh:NodeShape ;
    sh:closed true ;
    sh:description "'A globalFlagType is a grouping of characteristics unique to the Windows systemwide global variable named NtGlobalFlag that enables various internal debugging, tracing, and validation support in the operating system. [based on \"Windows Global Flags, Chapter 3: System Mechanisms of Windows Internals by Solomon, Russinovich, and Ionescu]'" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"The abbreviation of a global flag. See also: http://msdn.microsoft.com/en-us/library/windows/hardware/ff549646(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:abbreviation ],
        [ sh:description "\"The hexadecimalValue of a global flag. See also: http://msdn.microsoft.com/en-us/library/windows/hardware/ff549646(v=vs.85).aspx.\"" ;
            sh:order 0 ;
            sh:path observable:hexadecimalValue ],
        [ sh:description "\"The symbolicName of a global flag. See also: http://msdn.microsoft.com/en-us/library/windows/hardware/ff549646(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:symbolicName ],
        [ sh:description "\"The destination of a global flag. See also: http://msdn.microsoft.com/en-us/library/windows/hardware/ff549646(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:destination ] ;
    sh:targetClass observable:GlobalFlagType .

observable:IComHandlerActionType a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IComHandler action type is a grouping of characteristics unique to a Windows Task-related action that fires a Windows COM handler (smart code in the client address space that can optimize calls between a client and server). [based on https://docs.microsoft.com/en-us/windows/win32/taskschd/comhandleraction]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the ID of the COM action. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380613(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:comClassID ],
        [ sh:description "\"Specifies the data associated with the COM handler. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380613(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:comData ] ;
    sh:targetClass observable:IComHandlerActionType .

observable:IExecActionType a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IExec action type is a grouping of characteristics unique to an action that executes a command-line operation on a Windows operating system. [based on https://docs.microsoft.com/en-us/windows/win32/api/taskschd/nn-taskschd-iexecaction?redirectedfrom=MSDN]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the path to the executable file launched by the action. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380715(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:execProgramPath ],
        [ sh:description "\"Specifies the arguments associated with the command-line operation launched by the action. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380715(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:execArguments ],
        [ sh:class <types:Hash> ;
            sh:description "\"Specifies the hashes of the executable file launched by the action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:execProgramHashes ],
        [ sh:description "\"Specifies the directory that contains either the executable file or the files that are used by the executable file launched by the action. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380715(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:execWorkingDirectory ] ;
    sh:targetClass observable:IExecActionType .

observable:IShowMessageActionType a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An IShow message action type is a grouping of characteristics unique to an action that shows a message box when a task is activate. [based on https://docs.microsoft.com/en-us/windows/win32/api/taskschd/nn-taskschd-ishowmessageaction?redirectedfrom=MSDN]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the messageText that is displayed in the body of the message box by the action. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381302(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:showMessageBody ],
        [ sh:description "\"Specifies the title of the message box shown by the action. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381302(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:showMessageTitle ] ;
    sh:targetClass observable:IShowMessageActionType .

observable:MimePartType a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A mime part type is a grouping of characteristics unique to a component of a multi-part email body.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:contentDisposition ],
        [ sh:description "\"Text forming the main content of a printed or digital work (as opposed to additional elements such as headlines, images, charts, footnotes)\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:body ],
        [ sh:class observable:ObservableObject ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:bodyRaw ],
        [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:contentType ] ;
    sh:targetClass observable:MimePartType .

observable:ObservableAction a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An observable action is a grouping of characteristics unique to something that may be done or performed within the digital domain.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 17 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The primary performer of an action.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <action:performer> ],
        [ sh:description "A generic tag/label." ;
            sh:order 22 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 18 ;
            sh:path <rdfs:label> ],
        [ sh:description "\"The current state of the action.\"" ;
            sh:in ( "Complete/Finish" "Error" "Fail" "Ongoing" "Pending" "Success" "Unknown" ) ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path <action:actionStatus> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"A characterization of the differences between the expected and the actual performance of the action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path <action:error> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The environment wherein an action occurs.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <action:environment> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 16 ;
            sh:path <core:hasFacet> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The supporting (non-primary) performers of an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <action:participant> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things used to perform an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path <action:instrument> ],
        [ sh:description "\"The time at which performance of the action ended.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:endTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path <core:createdBy> ],
        [ sh:description "\"The time at which performance of the action began.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:startTime> ],
        [ sh:description "\"The number of times that the action was performed.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <action:actionCount> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 20 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 15 ;
            sh:path <core:externalReference> ],
        [ sh:class <action:Action> ;
            sh:description "\"References to other actions that make up part of a larger more complex action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <action:subaction> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 14 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 21 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 19 ;
            sh:path <core:objectMarking> ],
        [ sh:class <location:Location> ;
            sh:description "\"The locations where an action occurs.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path <action:location> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things resulting from performing an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <action:result> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things that the action is performed on/against.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path <core:object> ] ;
    sh:targetClass observable:ObservableAction .

observable:TaskActionType a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A task action type is a grouping of characteristics for a scheduled action to be completed.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the type of the action. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380596(v=vs.85).aspx.\"" ;
            sh:in ( "TASK_ACTION_COM_HANDLER" "TASK_ACTION_EXEC" "TASK_ACTION_SEND_EMAIL" "TASK_ACTION_SHOW_MESSAGE" ) ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:actionType ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies an action that sends an e-mail, which in this context refers to actual email message sent. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380693(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:iEmailAction ],
        [ sh:description "\"Specifies the user-defined identifier for the action. This identifier is used by the Task Scheduler for logging purposes. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380590(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:actionID ],
        [ sh:class observable:IComHandlerActionType ;
            sh:description "\"Specifies the data associated with the task action-fired COM handler.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:iComHandlerAction ],
        [ sh:class observable:IShowMessageActionType ;
            sh:description "\"Specifies an action that shows a message box when a task is activated. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa381302(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:iShowMessageAction ],
        [ sh:class observable:IExecActionType ;
            sh:description "\"Specifies an action that executes a command-line operation. See also: http://msdn.microsoft.com/en-us/library/windows/desktop/aa380715(v=vs.85).aspx.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:iExecAction ] ;
    sh:targetClass observable:TaskActionType .

observable:URLHistoryEntry a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A URL history entry is a grouping of characteristics unique to the properties of a single URL history entry for a particular browser\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the number of times a URL has been visited by a particular web browser.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:visitCount ],
        [ sh:description "\"The date and time at which the validity of the object expires.\"" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:expirationTime ],
        [ sh:description "\"Specifies the date/time that the URL referred to by the URL field was first visited\"" ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:firstVisit ],
        [ sh:description "\"Specifies the hostname of the system.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:hostname ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the origination point (i.e., URL) of a URL request.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:referrerURL ],
        [ sh:description "\"Specifies the title of a web page.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:pageTitle ],
        [ sh:description "\"Specifies the number of times the URL referred to by the URL field was manually entered into the browser's address field by the user. This field is only applicable for URL history entries generated by Google's Chrome browser.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:manuallyEnteredCount ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies a URL associated with a particular observable object or facet.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:url ],
        [ sh:description "\"Specifies the web browserUserProfile for which the URL history entry was created.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:browserUserProfile ],
        [ sh:description "\"Specifies the date/time that the URL referred to by the URL field was lastVisited.\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:lastVisit ],
        [ sh:description "\"Specifies a string representing a keywordSearchTerm contained within the URL field.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:keywordSearchTerm ] ;
    sh:targetClass observable:URLHistoryEntry .

observable:WhoisRegistrarInfoType a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Whois registrarInfo type is a grouping of characteristics unique to registrar-related information present in a response record conformant to the WHOIS protocol standard (RFC 3912). [based on https://en.wikipedia.org/wiki/WHOIS]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the Registrar GUID field of a Whois entry.\"" ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:registrarGUID ],
        [ sh:description "\"The name of the registrar organization.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:registrarName ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"contactPhoneNumber specifies a telephone service account number for contacting a contact entity by telephone.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:contactPhoneNumber ],
        [ sh:class <location:Location> ;
            sh:description "\"An administrative address for a particular geolocation.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:geoLocationAddress ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the corresponding Whois server for a registrar.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:whoisServer ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"An emailAddress.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:emailAddress ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies the corresponding referralURL for a registrar.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:referralURL ],
        [ sh:description "\"Specifies the Registrar ID field of a Whois entry.\"" ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:registrarID ] ;
    sh:targetClass observable:WhoisRegistrarInfoType .

observable:WindowsPEOptionalHeader a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows PE optional header is a grouping of characteristics unique to the 'optionalHeader' of a Windows PE (Portable Executable) file, consisting of a collection of metadata about the executable code structure of the file.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"Specifies the size of the stack to reserve.\"" ;
            sh:order 17 ;
            sh:path observable:sizeOfStackReserve ],
        [ sh:description "\"Specifies the minor version number of the image.\"" ;
            sh:order 25 ;
            sh:path observable:minorImageVersion ],
        [ sh:description "\"Specifies the reserved loaderFlags\"" ;
            sh:order 7 ;
            sh:path observable:loaderFlags ],
        [ sh:description "\"Specifies the minor version number of the subsystem.\"" ;
            sh:order 27 ;
            sh:path observable:minorSubsystemVersion ],
        [ sh:description "\"Specifies the alignment (in bytes) of PE sections when they are loaded into memory.\"" ;
            sh:order 9 ;
            sh:path observable:sectionAlignment ],
        [ sh:description "\"Specifies the minor version number of the required operating system.\"" ;
            sh:order 26 ;
            sh:path observable:minorOSVersion ],
        [ sh:description "\"Specifies the size of the uninitialized data section. If there are multiple such sections, this refers to the sum of the sizes of each section.\"" ;
            sh:order 18 ;
            sh:path observable:sizeOfUninitializedData ],
        [ sh:description "\"Specifies the address that is relative to the imageBase of the beginning-of-data section when it is loaded into memory.\"" ;
            sh:order 6 ;
            sh:path observable:imageBase ],
        [ sh:description "\"Specifies the major version number of the subsystem.\"" ;
            sh:order 24 ;
            sh:path observable:majorSubsystemVersion ],
        [ sh:description "\"Specifies the number of data-directory entries in the remainder of the optionalHeader.\"" ;
            sh:order 8 ;
            sh:path observable:numberOfRVAAndSizes ],
        [ sh:description "\"Specifies the value that indicates the type of the PE binary.\"" ;
            sh:order 21 ;
            sh:path observable:magic ],
        [ sh:description "\"Specifies the size, in bytes, of the image, including all headers, as the image is loaded in memory.\"" ;
            sh:order 14 ;
            sh:path observable:sizeOfImage ],
        [ sh:description "\"Specifies the major version number of the required operating system.\"" ;
            sh:order 23 ;
            sh:path observable:majorOSVersion ],
        [ sh:description "\"Specifies the flags that characterize the PE binary.\"" ;
            sh:order 20 ;
            sh:path observable:dllCharacteristics ],
        [ sh:description "\"Specifies the subsystem (e.g., GUI, device driver, etc.) that is required to run this image.\"" ;
            sh:order 28 ;
            sh:path observable:subsystem ],
        [ sh:description "\"Specifies the checksum of the PE binary.\"" ;
            sh:order 4 ;
            sh:path observable:checksum ],
        [ sh:description "\"Specifies the linker minor version number.\"" ;
            sh:order 1 ;
            sh:path observable:minorLinkerVersion ],
        [ sh:description "\"Specifies the size of the local heap space to commit.\"" ;
            sh:order 12 ;
            sh:path observable:sizeOfHeapCommit ],
        [ sh:description "\"Specifies the linker major version number.\"" ;
            sh:order 0 ;
            sh:path observable:majorLinkerVersion ],
        [ sh:description "\"Specifies the combined size of the MS-DOS, PE header, and section headers, rounded up a multiple of the value specified in the file_alignment header.\"" ;
            sh:order 11 ;
            sh:path observable:sizeOfHeaders ],
        [ sh:description "\"Specifies the factor (in bytes) that is used to align the raw data of sections in the image file.\"" ;
            sh:order 5 ;
            sh:path observable:fileAlignment ],
        [ sh:description "\"Specifies the reserved win32VersionValue.\"" ;
            sh:order 19 ;
            sh:path observable:win32VersionValue ],
        [ sh:description "\"Specifies the size of the local heap space to reserve.\"" ;
            sh:order 13 ;
            sh:path observable:sizeOfHeapReserve ],
        [ sh:description "\"Specifies the address of the entry point relative to the imageBase when the executable is loaded into memory.\"" ;
            sh:order 2 ;
            sh:path observable:addressOfEntryPoint ],
        [ sh:description "\"Specifies the address that is relative to the imageBase of the beginning-of-code section when it is loaded into memory.\"" ;
            sh:order 3 ;
            sh:path observable:baseOfCode ],
        [ sh:description "\"Specifies the major version number of the image.\"" ;
            sh:order 22 ;
            sh:path observable:majorImageVersion ],
        [ sh:description "\"Specifies the size of the stack to commit.\"" ;
            sh:order 16 ;
            sh:path observable:sizeOfStackCommit ],
        [ sh:description "\"Specifies the size of the initialized data section. If there are multiple such sections, this refers to the sum of the sizes of each section.\"" ;
            sh:order 15 ;
            sh:path observable:sizeOfInitializedData ],
        [ sh:description "\"Specifies the size of the code (text) section. If there are multiple such sections, this refers to the sum of the sizes of each section.\"" ;
            sh:order 10 ;
            sh:path observable:sizeOfCode ] ;
    sh:targetClass observable:WindowsPEOptionalHeader .

observable:WindowsPESection a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows PE section is a grouping of characteristics unique to a specific default or custom-defined region of a Windows PE (Portable Executable) file, consisting of an individual portion of the actual executable content of the file delineated according to unique purpose and memory protection requirements.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <types:Hash> ;
            sh:description "\"Specifies any hashes computed over the section.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:hashes ],
        [ sh:description "The number of item belonging to a collection." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <collections:size> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <rdfs:label> ],
        [ sh:description "\"Shannon entropy (a measure of randomness) of the data.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:entropy ] ;
    sh:targetClass observable:WindowsPESection .

observable:WindowsRegistryValue a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A Windows registry value is a grouping of characteristics unique to a particular value within a Windows registry (a hierarchical database that stores low-level settings for the Microsoft Windows operating sytem and for applications that opt to use the registry. [based on https://en.wikipedia.org/wiki/Windows_Registry]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Information arranged for automatic processing" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:data ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <rdfs:label> ],
        [ sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:dataType ] ;
    sh:targetClass observable:WindowsRegistryValue .

observable:X509V3ExtensionsFacet a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An X.509 v3 certificate extensions facet is a grouping of characteristics unique to a public key digital identity certificate conformant to the X.509 v3 PKI (Public Key Infrastructure) standard.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:maxCount 1 ;
            sh:order 9 ;
            sh:path observable:keyUsage ],
        [ sh:maxCount 1 ;
            sh:order 15 ;
            sh:path observable:subjectKeyIdentifier ],
        [ sh:maxCount 1 ;
            sh:order 12 ;
            sh:path observable:policyMappings ],
        [ sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:privateKeyUsagePeriodNotBefore ],
        [ sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:issuerAlternativeName ],
        [ sh:maxCount 1 ;
            sh:order 14 ;
            sh:path observable:subjectDirectoryAttributes ],
        [ sh:maxCount 1 ;
            sh:order 11 ;
            sh:path observable:policyConstraints ],
        [ sh:description "\"Object identifiers (OIDS), comma separated\"" ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path observable:certificatePolicies ],
        [ sh:maxCount 1 ;
            sh:order 6 ;
            sh:path observable:extendedKeyUsage ],
        [ sh:maxCount 1 ;
            sh:order 5 ;
            sh:path observable:crlDistributionPoints ],
        [ sh:maxCount 1 ;
            sh:order 10 ;
            sh:path observable:nameConstraints ],
        [ sh:description "" ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path observable:authorityKeyIdentifier ],
        [ sh:maxCount 1 ;
            sh:order 13 ;
            sh:path observable:subjectAlternativeName ],
        [ sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:inhibitAnyPolicy ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:privateKeyUsagePeriodNotAfter ],
        [ sh:maxCount 1 ;
            sh:order 3 ;
            sh:path observable:basicConstraints ] ;
    sh:targetClass observable:X509V3ExtensionsFacet .

<identity:Organization> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An organization is a grouping of identifying characteristics unique to a group of people who work together in an organized way for a shared purpose. [based on https://dictionary.cambridge.org/us/dictionary/english/organization]" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ] ;
    sh:targetClass <identity:Organization> .

<collections:CoItem> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A ThreadItem is a member of a thread.\"",
        "Element belonging to a bag" ;
    sh:ignoredProperties ( rdf:type ),
        ( rdf:type ) ;
    sh:property [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <collections:itemOf> ],
        [ sh:class <collections:CoItem> ;
            sh:description "The link to the actual resource to which the item refers." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <collections:itemContent> ] ;
    sh:targetClass <collections:CoItem> .

observable:ContactAffiliation a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contact affiliation is a grouping of characteristics unique to details of an organizational affiliation for a single contact entity.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ContactProfile ;
            sh:description "\"contactProfile specifies information characterizing details for contacting a contact entity by online service.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path observable:contactProfile ],
        [ sh:class observable:ContactURL ;
            sh:description "\"contactURL specifies information characterizing details for contacting a contact entity by Uniform Resource Locator (URL).\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path observable:contactURL ],
        [ sh:class observable:ContactPhone ;
            sh:description "\"contactPhone specifies information characterizing details for contacting a contact entity by telephone.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path observable:contactPhone ],
        [ sh:description "\"Specifies a particular suborganization (division, branch, office, etc.) that exists within a larger organization.\"" ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path observable:organizationDepartment ],
        [ sh:class <identity:Organization> ;
            sh:description "\"The name of the organization a contact works for or is assocciated with.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:contactOrganization ],
        [ sh:class observable:ContactMessaging ;
            sh:description "\"contactMessaging specifies information characterizing details for contacting a contact entity by digital messaging.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path observable:contactMessaging ],
        [ sh:class observable:ContactAddress ;
            sh:description "\"Specifies a geolocation address of an organization.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:organizationLocation ],
        [ sh:class observable:ContactEmail ;
            sh:description "\"contactEmail specifies information characterizing details for contacting a contact entity by email.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path observable:contactEmail ],
        [ sh:description "\"Specifies the title or role that a person plays within an organization.\"" ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path observable:organizationPosition ] ;
    sh:targetClass observable:ContactAffiliation .

observable:ContactSIP a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contactSIP is a grouping of characteristics unique to details for contacting a contact entity by Session Initiation Protocol (SIP).\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"A SIP address specifies Session Initiation Protocol (SIP) identifier.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:sipAddress ],
        [ sh:description "\"contactSIPScope specifies the relevant scope (home, work, school, etc) of details for contacting a contact entity by Session Initiation Protocol (SIP).\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:contactSIPScope ] ;
    sh:targetClass observable:ContactSIP .

<types:DictionaryEntry> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A dictionary entry is a single (term/key, value) pair.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"A key property of a single dictionary entry.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 0 ;
            sh:path <types:key> ],
        [ sh:description "A string value." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 1 ;
            sh:path <core:value> ] ;
    sh:targetClass <types:DictionaryEntry> .

<collections:ListItem> a sh:NodeShape ;
    sh:closed true ;
    sh:description "element belonging to a list" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "A number identifying the position, starting from 1, of a particular list item within a list." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 0 ;
            sh:path <collections:_index> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass <collections:ListItem> .

observable:ContactProfile a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contactProfile is a grouping of characteristics unique to details for contacting a contact entity by online service.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"A profile specifies a particular online service profile.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:profile ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"A contactProfile platform specifies an online service platform associated with a contact.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:contactProfilePlatform ] ;
    sh:targetClass observable:ContactProfile .

<types:ControlledDictionary> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A controlled dictionary is a list of (term/key, value) pairs where each term/key exists no more than once and is constrained to an explicitly defined set of values.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <types:DictionaryEntry> ;
            sh:description "\"A dictionary entry.\"" ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <types:entry> ] ;
    sh:targetClass <types:ControlledDictionary> .

observable:ContactAddress a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contact address is a grouping of characteristics unique to a geolocation address of a contact entity.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"contactAddressScope specifies the relevant scope (home, work, school, etc) for a geolocation address of a contact entity.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:contactAddressScope ],
        [ sh:class <location:Location> ;
            sh:description "\"An administrative address for a particular geolocation.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:geoLocationAddress ] ;
    sh:targetClass observable:ContactAddress .

observable:ContactEmail a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contact email is a grouping of characteristics unique to details for contacting a contact entity by email.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"An emailAddress.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:emailAddress ],
        [ sh:description "\"contactEmailScope specifies the relevant scope (home, work, school, etc) of details for contacting a contact entity by email.\"" ;
            sh:in ( "home" "work" "school" "cloud" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:contactEmailScope ] ;
    sh:targetClass observable:ContactEmail .

observable:ContactMessaging a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contactMessaging is a grouping of characteristics unique to details for contacting a contact entity by digital messaging.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"A messagingAddress specifies details of an identifier for digital messsaging communication.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:messagingAddress ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"A contactMessagingPlatform specifies a digital messaging platform associated with a contact.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:contactMessagingPlatform ] ;
    sh:targetClass observable:ContactMessaging .

observable:ContactPhone a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contactPhone is a grouping of characteristics unique to details for contacting a contact entity by telephone.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"contactPhoneScope specifies the relevant scope (home, work, school, etc) of details for contacting a contact entity by telephone.\"" ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:contactPhoneScope ],
        [ sh:class observable:ObservableObject ;
            sh:description "\"contactPhoneNumber specifies a telephone service account number for contacting a contact entity by telephone.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path observable:contactPhoneNumber ] ;
    sh:targetClass observable:ContactPhone .

observable:ContactURL a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A contactURL is a grouping of characteristics unique to details for contacting a contact entity by Uniform Resource Locator (URL).\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class observable:ObservableObject ;
            sh:description "\"Specifies a URL associated with a particular observable object or facet.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path observable:url ],
        [ sh:description "\"contact url scope specifies the relevant scope (homepage, home, work, school, etc) of details for contacting a contact entity by Uniform Resource Locator (URL).\"" ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:contactURLScope ] ;
    sh:targetClass observable:ContactURL .

<collections:Thing> a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass <collections:Thing> .

<types:Thread> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A semi-ordered array of items, that can be present in multiple copies.  Implemetation of a UCO Thread is similar to a Collections Ontology List, except a Thread may fork and merge - that is, one of its members may have two or more direct successors, and two or more direct predecessors.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The number of item belonging to a collection." ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path <collections:size> ],
        [ sh:class <collections:CoItem> ;
            sh:description "The link to every item of the bag" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <collections:item> ],
        [ sh:class <collections:Thing> ;
            sh:description "The link to the members of a collection" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <collections:element> ] ;
    sh:targetClass <types:Thread> .

<action:Action> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An action is something that may be done or performed.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <core:UcoObject> ;
            sh:description "\"A characterization of the differences between the expected and the actual performance of the action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 3 ;
            sh:path <action:error> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 17 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "\"The time at which performance of the action ended.\"" ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path <core:endTime> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things that the action is performed on/against.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 5 ;
            sh:path <core:object> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 14 ;
            sh:path <dcterms:description> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The primary performer of an action.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <action:performer> ],
        [ sh:class <location:Location> ;
            sh:description "\"The locations where an action occurs.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 8 ;
            sh:path <action:location> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things resulting from performing an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 7 ;
            sh:path <action:result> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 15 ;
            sh:path <core:externalReference> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 16 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path <core:createdBy> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The things used to perform an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 4 ;
            sh:path <action:instrument> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 21 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 18 ;
            sh:path <rdfs:label> ],
        [ sh:description "A generic tag/label." ;
            sh:order 22 ;
            sh:path <core:tag> ],
        [ sh:class <action:Action> ;
            sh:description "\"References to other actions that make up part of a larger more complex action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <action:subaction> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 20 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "\"The current state of the action.\"" ;
            sh:in ( "Complete/Finish" "Error" "Fail" "Ongoing" "Pending" "Success" "Unknown" ) ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path <action:actionStatus> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The environment wherein an action occurs.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 1 ;
            sh:path <action:environment> ],
        [ sh:class <core:UcoObject> ;
            sh:description "\"The supporting (non-primary) performers of an action.\"" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <action:participant> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 19 ;
            sh:path <core:objectMarking> ],
        [ sh:description "\"The number of times that the action was performed.\"" ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <action:actionCount> ],
        [ sh:description "\"The time at which performance of the action began.\"" ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:startTime> ] ;
    sh:targetClass <action:Action> .

<types:Dictionary> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A dictionary is list of (term/key, value) pairs with each term/key existing no more than once.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class <types:DictionaryEntry> ;
            sh:description "\"A dictionary entry.\"" ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <types:entry> ] ;
    sh:targetClass <types:Dictionary> .

<identity:Identity> a sh:NodeShape ;
    sh:closed true ;
    sh:description "An identity is a grouping of identifying characteristics unique to an individual or organization." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ] ;
    sh:targetClass <identity:Identity> .

<location:Location> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A location is a geospatial place, site, or position." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ] ;
    sh:targetClass <location:Location> .

<types:Hash> a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"A hash is a grouping of characteristics unique to the result of applying a mathematical algorithm that maps data of arbitrary size to a bit string (the 'hash') and is a one-way function, that is, a function which is practically infeasible to invert. This is commonly used for integrity checking of data. [based on https://en.wikipedia.org/wiki/Cryptographic_hash_function]\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "\"A cryptographic hash value.\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 0 ;
            sh:path <types:hashValue> ],
        [ sh:description "\"A particular cryptographic hashing method (e.g., MD5).\"" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 1 ;
            sh:path <types:hashMethod> ] ;
    sh:targetClass <types:Hash> .

<core:UcoObject> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A UCO object is a representation of a fundamental concept either directly inherent to the cyber domain or indirectly related to the cyber domain and necessary for contextually characterizing cyber domain concepts and relationships. Within the Unified Cyber Ontology (UCO) structure this is the base class acting as a consistent, unifying and interoperable foundation for all explicit and inter-relatable content objects." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ] ;
    sh:targetClass <core:UcoObject> .

observable:ObservableObject a sh:NodeShape ;
    sh:closed true ;
    sh:description "\"An observable object is a grouping of characteristics unique to a distinct article or unit within the digital domain.\"" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 6 ;
            sh:path <core:hasFacet> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 4 ;
            sh:path <dcterms:description> ],
        [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path <core:specVersion> ],
        [ sh:maxCount 1 ;
            sh:order 0 ;
            sh:path observable:hasChanged ],
        [ sh:description "the particular condition that someone or something is in at a specific time." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path observable:state ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 5 ;
            sh:path <core:externalReference> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 7 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 9 ;
            sh:path <core:objectMarking> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path <core:createdBy> ],
        [ sh:description "A generic tag/label." ;
            sh:order 12 ;
            sh:path <core:tag> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:class <collections:Bag> ;
            sh:description "The link to a bag in which the item is member." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:BlankNode ;
            sh:order 2 ;
            sh:path <collections:itemOf> ] ;
    sh:targetClass observable:ObservableObject .

<collections:Bag> a sh:NodeShape ;
    sh:closed true ;
    sh:description "Collection that can have a number of copies of each object" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The number of item belonging to a collection." ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path <collections:size> ],
        [ sh:class <collections:Thing> ;
            sh:description "The link to the members of a collection" ;
            sh:nodeKind sh:BlankNode ;
            sh:order 0 ;
            sh:path <collections:element> ] ;
    sh:targetClass <collections:Bag> .

<core:MarkingDefinitionAbstraction> a sh:NodeShape ;
    sh:closed true ;
    sh:description "A marking definition abstraction is a grouping of characteristics unique to the expression of a specific data marking conveying restrictions, permissions, and other guidance for how marked data can be used and shared. This class is an ontological structural abstraction for this concept. Implementations of this concept should utilize the marking MarkingDefinition class." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "The version of UCO ontology or subontology specification used to characterize a concept." ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path <core:specVersion> ],
        [ sh:description "The name of a particular concept characterization." ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path <rdfs:label> ],
        [ sh:description "Specifies the time that this particular version of the object was modified. The object creator can use the time it deems most appropriate as the time this version of the object was modified. The value of the modified property for a given object version MUST be later than or equal to the value of the created property. Object creators MUST update the modified property when creating a new version of an object. The modified timestamp MUST be precise to the nearest millisecond (exactly three digits after the decimal place in seconds)." ;
            sh:order 4 ;
            sh:path <core:modifiedTime> ],
        [ sh:class <core:MarkingDefinitionAbstraction> ;
            sh:description "Marking definitions to be applied to a particular concept characterization in its entirety." ;
            sh:nodeKind sh:BlankNode ;
            sh:order 6 ;
            sh:path <core:objectMarking> ],
        [ sh:description "A generic tag/label." ;
            sh:order 9 ;
            sh:path <core:tag> ],
        [ sh:description "Further sets of properties characterizing a concept based on the particular context of the class and of the particular instance of the concept being characterized." ;
            sh:order 3 ;
            sh:path <core:hasFacet> ],
        [ sh:description "The identity that created a characterization of a concept." ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path <core:createdBy> ],
        [ sh:description "Specifies a reference to a resource outside of the UCO." ;
            sh:order 2 ;
            sh:path <core:externalReference> ],
        [ sh:description "The time at which a characterization of a concept is created. This time pertains to the time of creating the record object, and is not an intrinsic characteristic of the concept." ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path <core:objectCreatedTime> ],
        [ sh:description "A human-readable description of an entity" ;
            sh:order 1 ;
            sh:path <dcterms:description> ] ;
    sh:targetClass <core:MarkingDefinitionAbstraction> .

